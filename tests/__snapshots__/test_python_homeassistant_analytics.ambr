# serializer version: 1
# name: test_analytics
  dict({
    'current': dict({
      'integrations': dict({
        'abode': 526,
        'accuweather': 11570,
        'acmeda': 29,
        'adax': 471,
        'adguard': 13138,
        'ads': 39,
        'advantage_air': 264,
        'aemet': 1385,
        'aftership': 60,
        'agent_dvr': 706,
        'air_quality': 385,
        'airly': 771,
        'airnow': 800,
        'airq': 51,
        'airthings': 1306,
        'airthings_ble': 1016,
        'airtouch4': 91,
        'airvisual': 1368,
        'airvisual_pro': 133,
        'airzone': 139,
        'airzone_cloud': 117,
        'aladdin_connect': 763,
        'alarm_control_panel': 20564,
        'alarmdecoder': 118,
        'alert': 2209,
        'alexa': 7717,
        'almond': 30,
        'alpha_vantage': 7,
        'amazon_polly': 16,
        'amberelectric': 336,
        'ambiclimate': 52,
        'ambient_station': 1243,
        'amcrest': 1328,
        'analytics': 27944,
        'android_ip_webcam': 921,
        'androidtv': 8039,
        'androidtv_remote': 42392,
        'anel_pwrctrl': 5,
        'anova': 79,
        'anthemav': 100,
        'aosmith': 8,
        'apache_kafka': 1,
        'apcupsd': 870,
        'api': 33077,
        'apple_tv': 31096,
        'application_credentials': 22895,
        'apprise': 2,
        'aprs': 5,
        'aqualogic': 17,
        'aquostv': 4,
        'aranet': 306,
        'arcam_fmj': 57,
        'arest': 1,
        'arris_tg2492lg': 2,
        'aruba': 1,
        'aseko_pool_live': 7,
        'assist_pipeline': 7896,
        'asterisk_mbox': 25,
        'asustor': 1,
        'asuswrt': 2636,
        'atag': 86,
        'atome': 2,
        'august': 4719,
        'aurora': 975,
        'aurora_abb_powerone': 34,
        'aussie_broadband': 503,
        'auth': 28042,
        'auth_header': 3,
        'automation': 246192,
        'awair': 1022,
        'aws': 59,
        'axis': 926,
        'azure_devops': 24,
        'azure_event_hub': 21,
        'azure_service_bus': 2,
        'backup': 12072,
        'baf': 395,
        'baidu': 34,
        'balboa': 88,
        'bayesian': 192,
        'bbox': 2,
        'beewi_smartclim': 1,
        'binary_sensor': 51013,
        'bitcoin': 26,
        'blebox': 287,
        'blink': 5454,
        'blockchain': 1,
        'bloomsky': 6,
        'bluemaestro': 19,
        'blueprint': 27823,
        'bluesound': 311,
        'bluetooth': 123794,
        'bluetooth_adapters': 8466,
        'bluetooth_le_tracker': 27,
        'bluetooth_tracker': 98,
        'bme280': 1,
        'bmw_connected_drive': 2436,
        'bond': 2096,
        'bosch_shc': 583,
        'braviatv': 9276,
        'broadlink': 18762,
        'brother': 19438,
        'brottsplatskartan': 168,
        'browser': 554,
        'brunt': 39,
        'bsblan': 28,
        'bt_smarthub': 4,
        'bthome': 4151,
        'buienradar': 6638,
        'button': 16540,
        'caldav': 499,
        'calendar': 4778,
        'camera': 29618,
        'canary': 107,
        'cast': 123969,
        'ccm15': 2,
        'cert_expiry': 4602,
        'channels': 3,
        'citybikes': 2,
        'clickatell': 2,
        'clicksend': 7,
        'clicksend_tts': 1,
        'climacell': 2,
        'climate': 31892,
        'cloud': 88612,
        'cloudflare': 1901,
        'co2signal': 24249,
        'coinbase': 414,
        'color_extractor': 433,
        'comapsmarthome': 2,
        'comed_hourly_pricing': 4,
        'comelit': 5,
        'comfoconnect': 161,
        'command_line': 10724,
        'compensation': 171,
        'config': 33336,
        'configurator': 117,
        'control4': 137,
        'conversation': 18713,
        'coolmaster': 59,
        'coronavirus': 257,
        'counter': 39980,
        'cover': 22795,
        'cpuspeed': 6516,
        'crownstone': 6,
        'cups': 2,
        'currencylayer': 2,
        'daikin': 3027,
        'danfoss_air': 30,
        'darksky': 81,
        'datadog': 22,
        'date': 1,
        'datetime': 2,
        'ddwrt': 7,
        'debugpy': 105,
        'deconz': 5503,
        'decora_wifi': 617,
        'default_config': 241728,
        'delijn': 2,
        'deluge': 244,
        'demo': 74,
        'denon': 6,
        'denonavr': 10829,
        'derivative': 4253,
        'deutsche_bahn': 3,
        'devialet': 76,
        'device_automation': 27917,
        'device_sun_light_trigger': 77,
        'device_tracker': 33179,
        'devolo_home_control': 65,
        'devolo_home_network': 1472,
        'dexcom': 332,
        'dhcp': 28409,
        'dht': 6,
        'diagnostics': 24827,
        'dialogflow': 621,
        'digital_ocean': 43,
        'directv': 313,
        'discogs': 1,
        'discord': 1473,
        'discovergy': 90,
        'discovery': 611,
        'dlink': 178,
        'dlna_dmr': 68532,
        'dlna_dms': 55481,
        'dnsip': 4576,
        'dominos': 2,
        'doods': 18,
        'doorbird': 978,
        'dormakaba_dkey': 8,
        'dovado': 1,
        'downloader': 1259,
        'dremel_3d_printer': 11,
        'drop_connect': 1,
        'dsmr': 4073,
        'dsmr_reader': 983,
        'dte_energy_bridge': 2,
        'duckdns': 1943,
        'dunehd': 104,
        'duotecno': 5,
        'dwd_weather_warnings': 2761,
        'dweet': 1,
        'dynalite': 37,
        'eafm': 346,
        'easyenergy': 137,
        'ebusd': 40,
        'ecoal_boiler': 3,
        'ecobee': 7769,
        'ecoforest': 10,
        'econet': 760,
        'ecovacs': 763,
        'ecowitt': 3001,
        'edimax': 15,
        'edl21': 287,
        'efergy': 285,
        'egardia': 32,
        'eight_sleep': 57,
        'electrasmart': 25,
        'electric_kiwi': 20,
        'elgato': 1931,
        'eliqonline': 1,
        'elkm1': 240,
        'elmax': 6,
        'elv': 1,
        'emby': 593,
        'emoncms': 16,
        'emoncms_history': 48,
        'emonitor': 5,
        'emulated_hue': 2538,
        'emulated_kasa': 116,
        'emulated_roku': 1105,
        'energy': 74127,
        'energyzero': 714,
        'enigma2': 488,
        'enocean': 215,
        'enphase_envoy': 2811,
        'entur_public_transport': 8,
        'environment_canada': 1692,
        'envisalink': 851,
        'ephember': 3,
        'epson': 216,
        'eq3btsmart': 5,
        'escea': 17,
        'esphome': 56399,
        'etherscan': 1,
        'eufy': 101,
        'eufylife_ble': 638,
        'event': 4,
        'evil_genius_labs': 4,
        'evohome': 1260,
        'ezviz': 2836,
        'faa_delays': 141,
        'facebook': 3,
        'facebox': 1,
        'fail2ban': 1,
        'familyhub': 14,
        'fan': 17496,
        'fastdotcom': 1064,
        'feedreader': 727,
        'ffmpeg': 21183,
        'ffmpeg_motion': 13,
        'ffmpeg_noise': 9,
        'fibaro': 654,
        'file': 93,
        'file_upload': 20976,
        'filesize': 2156,
        'filter': 732,
        'fireservicerota': 34,
        'firmata': 85,
        'fitbit': 616,
        'fivem': 19,
        'fixer': 2,
        'fjaraskupan': 28,
        'flexit_bacnet': 13,
        'flic': 131,
        'flick_electric': 41,
        'flipr': 66,
        'flo': 409,
        'flume': 844,
        'flunearyou': 9,
        'flux': 30,
        'flux_led': 5910,
        'folder': 18,
        'folder_watcher': 652,
        'foobot': 34,
        'forecast_solar': 25124,
        'forked_daapd': 292,
        'fortios': 1,
        'foscam': 1644,
        'foursquare': 7,
        'free_mobile': 10,
        'freebox': 2535,
        'freedns': 46,
        'freedompro': 26,
        'fritz': 18161,
        'fritzbox': 13959,
        'fritzbox_callmonitor': 1933,
        'fritzbox_netmonitor': 4,
        'fronius': 3287,
        'frontend': 203265,
        'frontier_silicon': 1597,
        'fully_kiosk': 6481,
        'garadget': 2,
        'garages_amsterdam': 10,
        'gardena_bluetooth': 44,
        'gardena_smart_system': 1,
        'garmin_connect': 3,
        'gc100': 4,
        'gdacs': 1234,
        'generic': 17304,
        'generic_hygrostat': 759,
        'generic_thermostat': 3307,
        'geniushub': 24,
        'geo_json_events': 46,
        'geo_location': 657,
        'geo_rss_events': 2,
        'geocaching': 324,
        'geofency': 312,
        'geonetnz_quakes': 156,
        'geonetnz_volcano': 41,
        'gios': 281,
        'github': 3123,
        'glances': 2779,
        'goalzero': 38,
        'gogogate2': 402,
        'goodwe': 1297,
        'google': 17366,
        'google_assistant': 14371,
        'google_assistant_sdk': 5690,
        'google_cloud': 20,
        'google_domains': 109,
        'google_generative_ai_conversation': 198,
        'google_mail': 757,
        'google_maps': 11,
        'google_pubsub': 23,
        'google_sheets': 1170,
        'google_tasks': 647,
        'google_translate': 128088,
        'google_travel_time': 816,
        'google_wifi': 43,
        'govee_ble': 3617,
        'gpsd': 1,
        'gpslogger': 613,
        'graphite': 13,
        'gree': 2364,
        'greeneye_monitor': 6,
        'group': 87957,
        'growatt_server': 845,
        'gtfs': 2,
        'guardian': 9,
        'habitica': 93,
        'hangouts': 4,
        'hardkernel': 359,
        'hardware': 21591,
        'harman_kardon_avr': 4,
        'harmony': 10043,
        'hassio': 192136,
        'hddtemp': 2,
        'hdmi_cec': 68,
        'heos': 6181,
        'here_travel_time': 356,
        'hikvision': 1172,
        'hikvisioncam': 18,
        'hisense_aehw4a1': 37,
        'history': 35355,
        'history_stats': 868,
        'hive': 1425,
        'hlk_sw16': 14,
        'holiday': 1042,
        'home_connect': 5751,
        'home_plus_control': 85,
        'homeassistant': 108242,
        'homeassistant_alerts': 22264,
        'homeassistant_hardware': 311,
        'homeassistant_sky_connect': 13752,
        'homeassistant_yellow': 115,
        'homekit': 46372,
        'homekit_controller': 32065,
        'homematic': 1185,
        'homematicip_cloud': 2009,
        'homewizard': 5352,
        'homeworks': 8,
        'honeywell': 1723,
        'hp_ilo': 12,
        'html5': 58,
        'http': 89808,
        'huawei_lte': 650,
        'hue': 39292,
        'huisbaasje': 43,
        'humidifier': 10105,
        'hunterdouglas_powerview': 514,
        'hvv_departures': 68,
        'hydrawise': 591,
        'hyperion': 1480,
        'ialarm': 27,
        'iammeter': 93,
        'iaqualink': 329,
        'ibeacon': 45840,
        'icloud': 5750,
        'idasen_desk': 124,
        'idteck_prox': 1,
        'ifttt': 7030,
        'ign_sismologia': 2,
        'ihc': 261,
        'image': 11876,
        'image_processing': 1315,
        'image_upload': 16592,
        'imap': 785,
        'imap_email_content': 13,
        'incomfort': 104,
        'influxdb': 21632,
        'inkbird': 1770,
        'input_boolean': 87517,
        'input_button': 46035,
        'input_datetime': 55480,
        'input_number': 67270,
        'input_select': 55638,
        'input_text': 52047,
        'insteon': 1077,
        'integration': 13813,
        'intellifire': 33,
        'intent': 1394,
        'intent_script': 1518,
        'intesishome': 264,
        'ios': 12477,
        'iotawatt': 447,
        'iperf3': 137,
        'ipma': 636,
        'ipp': 68563,
        'iqvia': 564,
        'islamic_prayer_times': 521,
        'iss': 1711,
        'isy994': 412,
        'itach': 3,
        'itunes': 7,
        'izone': 91,
        'jellyfin': 2078,
        'jewish_calendar': 219,
        'joaoapps_join': 175,
        'juicenet': 193,
        'jvc_projector': 29,
        'kaiterra': 51,
        'kaleidescape': 20,
        'keba': 93,
        'keenetic_ndms2': 1943,
        'kef': 51,
        'kegtron': 5,
        'keyboard_remote': 77,
        'keymitt_ble': 9,
        'kira': 8,
        'kitchen_sink': 3,
        'kmtronic': 21,
        'knx': 2926,
        'kodi': 5164,
        'konnected': 1301,
        'kostal_plenticore': 631,
        'kraken': 301,
        'lacrosse': 3,
        'lacrosse_view': 178,
        'lametric': 676,
        'landisgyr_heat_meter': 13,
        'lannouncer': 7,
        'lastfm': 300,
        'launch_library': 280,
        'laundrify': 150,
        'lcn': 38,
        'ld2410_ble': 930,
        'led_ble': 634,
        'lg_netcast': 15,
        'lg_soundbar': 362,
        'lidarr': 309,
        'life360': 2473,
        'lifx': 4814,
        'lifx_cloud': 4,
        'light': 36747,
        'lightwave': 105,
        'limitlessled': 20,
        'linear_garage_door': 2,
        'linksys_smart': 3,
        'linode': 22,
        'linux_battery': 7,
        'lirc': 3,
        'litterrobot': 1343,
        'livisi': 231,
        'llamalab_automate': 1,
        'local_calendar': 17034,
        'local_file': 71,
        'local_ip': 15007,
        'local_todo': 8185,
        'locative': 174,
        'lock': 12373,
        'logbook': 35383,
        'logentries': 1,
        'logger': 41459,
        'logi_circle': 18,
        'london_air': 1,
        'london_underground': 3,
        'lookin': 33,
        'loqed': 208,
        'lovelace': 37850,
        'luci': 36,
        'luftdaten': 733,
        'lupusec': 28,
        'lutron': 115,
        'lutron_caseta': 5270,
        'lyric': 710,
        'mailbox': 3,
        'mailgun': 105,
        'manual': 357,
        'manual_mqtt': 11,
        'map': 31502,
        'marytts': 4,
        'mastodon': 1,
        'matrix': 210,
        'matter': 16948,
        'maxcube': 201,
        'mazda': 68,
        'mcp23017': 1,
        'meater': 1295,
        'media_extractor': 1483,
        'media_player': 32404,
        'media_source': 31075,
        'mediaroom': 36,
        'melcloud': 2774,
        'melissa': 12,
        'melnor': 43,
        'meraki': 4,
        'message_bird': 4,
        'met': 192246,
        'met_eireann': 301,
        'meteo_france': 3887,
        'meteoalarm': 8,
        'meteoclimatic': 158,
        'metoffice': 1781,
        'mfi': 17,
        'microsoft': 11,
        'miflora': 15,
        'mikrotik': 1765,
        'mill': 888,
        'min_max': 14492,
        'minecraft_server': 1109,
        'minio': 7,
        'mitemp_bt': 24,
        'mjpeg': 6088,
        'moat': 4,
        'mobile_app': 201940,
        'mochad': 25,
        'modbus': 4724,
        'modem_callerid': 24,
        'modern_forms': 341,
        'moehlenhoff_alpha2': 39,
        'mold_indicator': 25,
        'monoprice': 114,
        'moon': 12113,
        'mopeka': 225,
        'motion_blinds': 626,
        'motioneye': 3533,
        'mpd': 82,
        'mqtt': 107674,
        'mqtt_eventstream': 96,
        'mqtt_json': 5,
        'mqtt_room': 464,
        'mqtt_statestream': 573,
        'msteams': 13,
        'mullvad': 123,
        'music_light_switch': 1,
        'mutesync': 60,
        'mvglive': 1,
        'my': 32712,
        'mycroft': 5,
        'myq': 3733,
        'mysensors': 475,
        'mystrom': 590,
        'mythicbeastsdns': 2,
        'nad': 2,
        'nam': 58,
        'namecheapdns': 88,
        'nanoleaf': 3249,
        'neato': 929,
        'nederlandse_spoorwegen': 3,
        'ness_alarm': 40,
        'nest': 12637,
        'netatmo': 10978,
        'netdata': 3,
        'netgear': 2289,
        'netgear_lte': 65,
        'network': 28141,
        'neurio_energy': 1,
        'nexia': 475,
        'nextbus': 15,
        'nextcloud': 1126,
        'nextdns': 495,
        'nfandroidtv': 2836,
        'nibe_heatpump': 279,
        'nightscout': 175,
        'niko_home_control': 11,
        'nina': 2513,
        'nissan_leaf': 294,
        'nmap_tracker': 5148,
        'nmbs': 48,
        'no_ip': 232,
        'noaa_tides': 6,
        'nobo_hub': 81,
        'norway_air': 4,
        'notify': 58922,
        'notify_events': 421,
        'notion': 133,
        'nsw_fuel_station': 98,
        'nsw_rural_fire_service_feed': 2,
        'nuheat': 163,
        'nuki': 1966,
        'numato': 1,
        'number': 15809,
        'nut': 8713,
        'nws': 4057,
        'nx584': 1,
        'nzbget': 322,
        'obihai': 448,
        'octoprint': 9547,
        'ohmconnect': 96,
        'ombi': 66,
        'omnilogic': 86,
        'onboarding': 27916,
        'oncue': 74,
        'ondilo_ico': 153,
        'onewire': 252,
        'onkyo': 144,
        'onvif': 9854,
        'open_meteo': 2575,
        'openai_conversation': 5125,
        'openevse': 1,
        'openexchangerates': 325,
        'opengarage': 423,
        'openhardwaremonitor': 18,
        'openhome': 727,
        'opensensemap': 4,
        'opensky': 409,
        'opentherm_gw': 230,
        'openuv': 1913,
        'openweathermap': 21295,
        'opnsense': 318,
        'opower': 1267,
        'opple': 15,
        'oralb': 7774,
        'oru': 3,
        'orvibo': 14,
        'osoenergy': 10,
        'osramlightify': 59,
        'otbr': 5547,
        'otp': 2,
        'ourgroceries': 470,
        'overkiz': 4470,
        'ovo_energy': 269,
        'owntracks': 2339,
        'ozw': 7,
        'p1_monitor': 338,
        'panasonic_bluray': 3,
        'panasonic_viera': 1182,
        'panel_custom': 7155,
        'panel_iframe': 7735,
        'peco': 57,
        'pegel_online': 214,
        'permobil': 3,
        'persistent_notification': 27926,
        'person': 247198,
        'philips_js': 3287,
        'pi_hole': 7064,
        'picnic': 697,
        'picotts': 21,
        'pilight': 10,
        'ping': 13129,
        'pioneer': 11,
        'pjlink': 6,
        'plaato': 44,
        'plant': 1729,
        'plex': 13148,
        'plugwise': 539,
        'plum_lightpad': 1,
        'pocketcasts': 5,
        'point': 25,
        'poolsense': 22,
        'powerwall': 1165,
        'private_ble_device': 411,
        'profiler': 1695,
        'progettihwsw': 2,
        'prometheus': 1440,
        'prosegur': 92,
        'prowl': 9,
        'proximity': 4801,
        'proxmoxve': 1338,
        'proxy': 16,
        'prusalink': 735,
        'ps4': 1722,
        'pure_energie': 57,
        'purpleair': 90,
        'push': 2,
        'pushbullet': 1093,
        'pushover': 2429,
        'pushsafer': 2,
        'pvoutput': 442,
        'pvpc_hourly_pricing': 1223,
        'pyload': 1,
        'python_script': 7016,
        'qbittorrent': 1299,
        'qingping': 687,
        'qld_bushfire': 1,
        'qnap': 1860,
        'qnap_qsw': 52,
        'quantum_gateway': 5,
        'qvr_pro': 43,
        'qwikswitch': 9,
        'rachio': 3073,
        'radarr': 1956,
        'radio_browser': 175125,
        'radiotherm': 104,
        'rainbird': 701,
        'raincloud': 4,
        'rainforest_eagle': 253,
        'rainmachine': 379,
        'random': 179,
        'rapt_ble': 32,
        'raspberry_pi': 5282,
        'raspyrfm': 1,
        'rdw': 765,
        'recollect_waste': 122,
        'recorder': 62055,
        'recswitch': 21,
        'reddit': 2,
        'refoss': 2,
        'rejseplanen': 4,
        'remember_the_milk': 36,
        'remote': 8747,
        'remote_rpi_gpio': 36,
        'renault': 1284,
        'renson': 8,
        'reolink': 12854,
        'repairs': 21758,
        'repetier': 33,
        'rest': 7402,
        'rest_command': 10309,
        'rflink': 837,
        'rfxtrx': 2350,
        'rhasspy': 1021,
        'ridwell': 33,
        'ring': 13601,
        'risco': 274,
        'rituals_perfume_genie': 351,
        'rmvtransport': 2,
        'roborock': 7300,
        'roku': 10055,
        'roomba': 8519,
        'roon': 403,
        'route53': 72,
        'rpi_camera': 87,
        'rpi_gpio': 42,
        'rpi_power': 86497,
        'rpi_rf': 1,
        'rss_feed_template': 29,
        'rtsp_to_webrtc': 2356,
        'ruckus_unleashed': 95,
        'russound_rio': 3,
        'ruuvi_gateway': 72,
        'ruuvitag_ble': 739,
        'rympro': 21,
        'sabnzbd': 1029,
        'safe_mode': 80,
        'saj': 70,
        'samsungtv': 40184,
        'samsungtv_smart': 1,
        'satel_integra': 383,
        'scene': 241204,
        'schedule': 33055,
        'schlage': 472,
        'schluter': 92,
        'scrape': 2422,
        'screenlogic': 309,
        'script': 245069,
        'scsgate': 1,
        'search': 27917,
        'season': 6298,
        'select': 14462,
        'sendgrid': 4,
        'sense': 1639,
        'senseme': 9,
        'sensibo': 2854,
        'sensirion_ble': 51,
        'sensor': 102071,
        'sensorpro': 35,
        'sensorpush': 102,
        'sentry': 63,
        'senz': 90,
        'serial': 21,
        'serial_pm': 2,
        'sesame': 5,
        'seven_segments': 3,
        'seventeentrack': 846,
        'sfr_box': 174,
        'sharkiq': 1271,
        'sharpai': 3,
        'shell_command': 10664,
        'shelly': 44476,
        'shodan': 1,
        'shopping_list': 94953,
        'sia': 476,
        'sighthound': 2,
        'signal_messenger': 11,
        'simplepush': 77,
        'simplisafe': 802,
        'simulated': 1,
        'sinch': 2,
        'siren': 10592,
        'sisyphus': 22,
        'sky_hub': 2,
        'skybell': 69,
        'slack': 519,
        'sleepiq': 952,
        'slide': 107,
        'slimproto': 338,
        'sma': 1711,
        'smappee': 249,
        'smart_meter_texas': 240,
        'smartthings': 10613,
        'smartthings_soundbar': 1,
        'smarttub': 37,
        'smarty': 1,
        'smhi': 1907,
        'sms': 160,
        'smtp': 232,
        'snapcast': 349,
        'snips': 28,
        'snmp': 345,
        'snooz': 53,
        'solaredge': 4754,
        'solarlog': 177,
        'solax': 160,
        'soma': 94,
        'somfy': 32,
        'somfy_mylink': 109,
        'sonarr': 2543,
        'songpal': 1477,
        'sonoff': 1,
        'sonos': 36190,
        'sony_projector': 3,
        'soundtouch': 2068,
        'spaceapi': 3,
        'spc': 47,
        'speedtestdotnet': 23269,
        'spider': 21,
        'splunk': 54,
        'spotify': 24331,
        'sql': 4946,
        'squeezebox': 1390,
        'srp_energy': 82,
        'ssdp': 29846,
        'starline': 297,
        'starlingbank': 3,
        'starlink': 441,
        'statistics': 2141,
        'statsd': 4,
        'steam_online': 1552,
        'stiebel_eltron': 19,
        'stookalert': 443,
        'stookwijzer': 191,
        'stream': 32458,
        'streamlabswater': 18,
        'stt': 8742,
        'subaru': 265,
        'suez_water': 24,
        'sun': 246763,
        'sunweg': 3,
        'supervisord': 2,
        'supla': 108,
        'surepetcare': 840,
        'swiss_hydrological_data': 69,
        'swiss_public_transport': 110,
        'swisscom': 1,
        'switch': 51061,
        'switch_as_x': 36566,
        'switchbee': 3,
        'switchbot': 6932,
        'switchbot_cloud': 1010,
        'switcher_kis': 267,
        'switchmate': 37,
        'syncthing': 446,
        'syncthru': 2494,
        'synology_chat': 4,
        'synology_dsm': 26874,
        'synology_srm': 7,
        'syslog': 8,
        'system_bridge': 208,
        'system_health': 33542,
        'system_log': 29524,
        'systemmonitor': 32031,
        'tado': 8600,
        'tag': 28415,
        'tailscale': 738,
        'tailwind': 35,
        'tami4': 16,
        'tank_utility': 1,
        'tankerkoenig': 2251,
        'tasmota': 26245,
        'tautulli': 1280,
        'tcp': 10,
        'ted5000': 2,
        'telegram': 664,
        'telegram_bot': 13976,
        'tellduslive': 865,
        'tellstick': 228,
        'telnet': 9,
        'temper': 4,
        'template': 50553,
        'tesla': 6,
        'tesla_wall_connector': 2311,
        'tessie': 113,
        'text': 5943,
        'thermobeacon': 611,
        'thermopro': 634,
        'thethingsnetwork': 38,
        'thingspeak': 45,
        'thread': 56178,
        'threshold': 7004,
        'tibber': 5098,
        'tile': 3212,
        'tilt_ble': 84,
        'time': 15,
        'time_date': 1178,
        'timer': 49471,
        'tmb': 10,
        'tod': 4711,
        'todo': 5,
        'todoist': 1147,
        'tolo': 3,
        'tomato': 7,
        'tomorrowio': 1641,
        'toon': 252,
        'torque': 5,
        'totalconnect': 201,
        'touchline': 3,
        'tplink': 23602,
        'tplink_deco': 1,
        'tplink_lte': 1,
        'tplink_omada': 1024,
        'traccar': 560,
        'trace': 27820,
        'tractive': 686,
        'tradfri': 5538,
        'trafikverket_camera': 109,
        'trafikverket_ferry': 12,
        'trafikverket_train': 76,
        'trafikverket_weatherstation': 436,
        'transmission': 1782,
        'transport_nsw': 4,
        'trend': 175,
        'tts': 140185,
        'tuya': 48305,
        'twentemilieu': 194,
        'twilio': 982,
        'twilio_call': 18,
        'twilio_sms': 29,
        'twinkly': 3143,
        'twitch': 128,
        'twitter': 4,
        'uk_transport': 4,
        'ukraine_alarm': 549,
        'unifi': 16545,
        'unifi_direct': 5,
        'unifiled': 1,
        'unifiprotect': 10347,
        'universal': 550,
        'upb': 32,
        'upc_connect': 2,
        'update': 16059,
        'updater': 3556,
        'upnp': 83756,
        'uptime': 12286,
        'uptimerobot': 927,
        'usb': 27907,
        'usgs_earthquakes_feed': 9,
        'utility_meter': 27634,
        'uvc': 47,
        'v2c': 31,
        'vacuum': 11161,
        'vallox': 156,
        'valve': 1,
        'vasttrafik': 1,
        'veea': 1,
        'velbus': 76,
        'velux': 291,
        'venstar': 210,
        'vera': 351,
        'verisure': 1461,
        'version': 8919,
        'vesync': 3142,
        'viaggiatreno': 1,
        'vicare': 1489,
        'vilfo': 2,
        'vivotek': 1,
        'vizio': 2631,
        'vlc': 7,
        'vlc_telnet': 4099,
        'vodafone_station': 79,
        'voicerss': 4,
        'voip': 1324,
        'volkszaehler': 1,
        'volumio': 1409,
        'volvooncall': 1220,
        'vulcan': 23,
        'w800rf32': 6,
        'wake_on_lan': 19143,
        'wallbox': 878,
        'waqi': 1529,
        'warnwetter': 2,
        'water_heater': 3050,
        'waterfurnace': 15,
        'watson_tts': 6,
        'watttime': 15,
        'waze_travel_time': 5630,
        'weather': 23760,
        'weather_light_switch': 1,
        'weatherflow': 432,
        'weatherkit': 95,
        'webhook': 29208,
        'webostv': 28292,
        'websocket_api': 28914,
        'weishaupt_wcm_com': 1,
        'wemo': 7149,
        'whirlpool': 228,
        'whois': 364,
        'wiffi': 266,
        'wilight': 3,
        'wirelesstag': 131,
        'withings': 2133,
        'wiz': 8374,
        'wled': 17380,
        'wolflink': 178,
        'workday': 12696,
        'worldclock': 30,
        'worldtidesinfo': 2,
        'worxlandroid': 14,
        'ws66i': 12,
        'wsdot': 1,
        'wyoming': 13596,
        'x10': 2,
        'xbox': 6290,
        'xiaomi': 14,
        'xiaomi_aqara': 2880,
        'xiaomi_ble': 15727,
        'xiaomi_miio': 16204,
        'xiaomi_tv': 19,
        'xmpp': 3,
        'xs1': 4,
        'yale_smart_alarm': 347,
        'yalexs_ble': 942,
        'yamaha': 136,
        'yamaha_musiccast': 4404,
        'yandex_transport': 2,
        'yandextts': 2,
        'yardian': 13,
        'yeelight': 9883,
        'yeelightsunflower': 2,
        'yi': 3,
        'yolink': 977,
        'youless': 318,
        'youtube': 337,
        'zabbix': 51,
        'zamg': 440,
        'zeroconf': 30437,
        'zestimate': 16,
        'zeversolar': 86,
        'zha': 57988,
        'ziggo_mediabox_xl': 3,
        'zodiac': 492,
        'zone': 90321,
        'zoneminder': 258,
        'zwave': 34,
        'zwave_js': 24496,
        'zwave_me': 64,
      }),
    }),
  })
# ---
# name: test_current_analytics
  dict({
    'integrations': dict({
      'abode': 531,
      'accuweather': 11610,
      'acmeda': 29,
      'adax': 473,
      'adguard': 13192,
      'ads': 37,
      'advantage_air': 266,
      'aemet': 1390,
      'aftership': 60,
      'agent_dvr': 706,
      'air_quality': 386,
      'airly': 774,
      'airnow': 799,
      'airq': 51,
      'airthings': 1308,
      'airthings_ble': 1018,
      'airtouch4': 90,
      'airvisual': 1363,
      'airvisual_pro': 132,
      'airzone': 141,
      'airzone_cloud': 120,
      'aladdin_connect': 772,
      'alarm_control_panel': 20449,
      'alarmdecoder': 118,
      'alert': 2209,
      'alexa': 7705,
      'almond': 29,
      'alpha_vantage': 7,
      'amazon_polly': 16,
      'amberelectric': 336,
      'ambiclimate': 52,
      'ambient_station': 1249,
      'amcrest': 1324,
      'analytics': 27699,
      'android_ip_webcam': 920,
      'androidtv': 8058,
      'androidtv_remote': 42649,
      'anel_pwrctrl': 5,
      'anova': 80,
      'anthemav': 99,
      'aosmith': 14,
      'apache_kafka': 1,
      'apcupsd': 871,
      'api': 32847,
      'apple_tv': 31246,
      'application_credentials': 22649,
      'apprise': 2,
      'aprs': 5,
      'aqualogic': 17,
      'aquostv': 4,
      'aranet': 308,
      'arcam_fmj': 57,
      'arest': 1,
      'arris_tg2492lg': 2,
      'aruba': 1,
      'aseko_pool_live': 7,
      'assist_pipeline': 7784,
      'asterisk_mbox': 26,
      'asustor': 1,
      'asuswrt': 2656,
      'atag': 87,
      'atome': 2,
      'august': 4752,
      'aurora': 977,
      'aurora_abb_powerone': 34,
      'aussie_broadband': 506,
      'auth': 27797,
      'auth_header': 3,
      'automation': 247261,
      'awair': 1025,
      'aws': 60,
      'axis': 927,
      'azure_devops': 23,
      'azure_event_hub': 20,
      'azure_service_bus': 2,
      'backup': 11951,
      'baf': 399,
      'baidu': 35,
      'balboa': 90,
      'bayesian': 195,
      'bbox': 2,
      'beewi_smartclim': 1,
      'binary_sensor': 50815,
      'bitcoin': 25,
      'blebox': 287,
      'blink': 5458,
      'blockchain': 1,
      'bloomsky': 6,
      'blue_current': 1,
      'bluemaestro': 19,
      'blueprint': 27578,
      'bluesound': 313,
      'bluetooth': 124139,
      'bluetooth_adapters': 8357,
      'bluetooth_le_tracker': 27,
      'bluetooth_tracker': 98,
      'bme280': 1,
      'bmw_connected_drive': 2445,
      'bond': 2105,
      'bosch_shc': 587,
      'braviatv': 9300,
      'broadlink': 18804,
      'brother': 19543,
      'brottsplatskartan': 170,
      'browser': 557,
      'brunt': 39,
      'bsblan': 28,
      'bt_smarthub': 4,
      'bthome': 4166,
      'buienradar': 6651,
      'button': 16379,
      'caldav': 515,
      'calendar': 4770,
      'camera': 29502,
      'canary': 108,
      'cast': 124532,
      'ccm15': 2,
      'cert_expiry': 4618,
      'channels': 3,
      'citybikes': 2,
      'clickatell': 2,
      'clicksend': 7,
      'clicksend_tts': 1,
      'climacell': 2,
      'climate': 31824,
      'cloud': 88674,
      'cloudflare': 1916,
      'co2signal': 24353,
      'coinbase': 414,
      'color_extractor': 434,
      'comapsmarthome': 2,
      'comed_hourly_pricing': 4,
      'comelit': 3,
      'comfoconnect': 157,
      'command_line': 10749,
      'compensation': 171,
      'config': 33096,
      'configurator': 114,
      'control4': 137,
      'conversation': 18537,
      'coolmaster': 60,
      'coronavirus': 256,
      'counter': 39800,
      'cover': 22675,
      'cpuspeed': 6523,
      'crownstone': 6,
      'cups': 2,
      'currencylayer': 2,
      'daikin': 3030,
      'danfoss_air': 30,
      'darksky': 79,
      'datadog': 22,
      'date': 1,
      'datetime': 2,
      'ddwrt': 7,
      'debugpy': 104,
      'deconz': 5495,
      'decora_wifi': 622,
      'default_config': 242787,
      'delijn': 1,
      'deluge': 245,
      'demo': 79,
      'denon': 6,
      'denonavr': 10899,
      'derivative': 4282,
      'deutsche_bahn': 3,
      'devialet': 81,
      'device_automation': 27672,
      'device_sun_light_trigger': 77,
      'device_tracker': 33009,
      'devolo_home_control': 65,
      'devolo_home_network': 1472,
      'dexcom': 338,
      'dhcp': 28169,
      'dht': 6,
      'diagnostics': 24576,
      'dialogflow': 623,
      'digital_ocean': 43,
      'directv': 312,
      'discogs': 1,
      'discord': 1478,
      'discovergy': 91,
      'discovery': 602,
      'dlink': 175,
      'dlna_dmr': 68815,
      'dlna_dms': 55732,
      'dnsip': 4586,
      'dominos': 2,
      'doods': 18,
      'doorbird': 979,
      'dormakaba_dkey': 8,
      'dovado': 1,
      'downloader': 1259,
      'dremel_3d_printer': 11,
      'drop_connect': 1,
      'dsmr': 4086,
      'dsmr_reader': 989,
      'dte_energy_bridge': 2,
      'duckdns': 1942,
      'dunehd': 102,
      'duotecno': 5,
      'dwd_weather_warnings': 2788,
      'dweet': 1,
      'dynalite': 37,
      'eafm': 352,
      'easyenergy': 140,
      'ebusd': 43,
      'ecoal_boiler': 3,
      'ecobee': 7789,
      'ecoforest': 10,
      'econet': 761,
      'ecovacs': 765,
      'ecowitt': 3008,
      'edimax': 14,
      'edl21': 288,
      'efergy': 286,
      'egardia': 33,
      'eight_sleep': 56,
      'electrasmart': 25,
      'electric_kiwi': 20,
      'elgato': 1956,
      'eliqonline': 1,
      'elkm1': 239,
      'elmax': 6,
      'elv': 1,
      'emby': 595,
      'emoncms': 15,
      'emoncms_history': 48,
      'emonitor': 5,
      'emulated_hue': 2537,
      'emulated_kasa': 116,
      'emulated_roku': 1110,
      'energy': 74107,
      'energyzero': 715,
      'enigma2': 485,
      'enocean': 219,
      'enphase_envoy': 2833,
      'entur_public_transport': 7,
      'environment_canada': 1702,
      'envisalink': 853,
      'ephember': 3,
      'epson': 215,
      'eq3btsmart': 5,
      'escea': 17,
      'esphome': 56656,
      'etherscan': 1,
      'eufy': 101,
      'eufylife_ble': 640,
      'event': 4,
      'evil_genius_labs': 4,
      'evohome': 1266,
      'ezviz': 2849,
      'faa_delays': 143,
      'facebook': 3,
      'facebox': 1,
      'fail2ban': 1,
      'familyhub': 13,
      'fan': 17378,
      'fastdotcom': 1076,
      'feedreader': 729,
      'ffmpeg': 21083,
      'ffmpeg_motion': 13,
      'ffmpeg_noise': 9,
      'fibaro': 660,
      'file': 90,
      'file_upload': 20736,
      'filesize': 2163,
      'filter': 735,
      'fireservicerota': 34,
      'firmata': 84,
      'fitbit': 619,
      'fivem': 19,
      'fixer': 2,
      'fjaraskupan': 28,
      'flexit_bacnet': 14,
      'flic': 131,
      'flick_electric': 42,
      'flipr': 67,
      'flo': 412,
      'flume': 848,
      'flunearyou': 9,
      'flux': 30,
      'flux_led': 5932,
      'folder': 19,
      'folder_watcher': 651,
      'foobot': 34,
      'forecast_solar': 25140,
      'forked_daapd': 293,
      'fortios': 1,
      'foscam': 1652,
      'foursquare': 7,
      'free_mobile': 9,
      'freebox': 2558,
      'freedns': 50,
      'freedompro': 26,
      'fritz': 18266,
      'fritzbox': 14039,
      'fritzbox_callmonitor': 1945,
      'fritzbox_netmonitor': 4,
      'fronius': 3296,
      'frontend': 204291,
      'frontier_silicon': 1612,
      'fully_kiosk': 6518,
      'futurenow': 1,
      'garadget': 2,
      'garages_amsterdam': 10,
      'gardena_bluetooth': 44,
      'gardena_smart_system': 1,
      'garmin_connect': 3,
      'gc100': 4,
      'gdacs': 1234,
      'generic': 17347,
      'generic_hygrostat': 763,
      'generic_thermostat': 3333,
      'geniushub': 25,
      'geo_json_events': 44,
      'geo_location': 657,
      'geo_rss_events': 2,
      'geocaching': 328,
      'geofency': 313,
      'geonetnz_quakes': 157,
      'geonetnz_volcano': 41,
      'gios': 280,
      'github': 3137,
      'glances': 2791,
      'goalzero': 38,
      'gogogate2': 407,
      'goodwe': 1302,
      'google': 17436,
      'google_assistant': 14358,
      'google_assistant_sdk': 5727,
      'google_cloud': 19,
      'google_domains': 110,
      'google_generative_ai_conversation': 199,
      'google_mail': 762,
      'google_maps': 11,
      'google_pubsub': 23,
      'google_sheets': 1171,
      'google_tasks': 655,
      'google_translate': 129024,
      'google_travel_time': 820,
      'google_wifi': 43,
      'govee_ble': 3648,
      'gpsd': 1,
      'gpslogger': 618,
      'graphite': 13,
      'gree': 2372,
      'greeneye_monitor': 6,
      'group': 88150,
      'growatt_server': 842,
      'gtfs': 2,
      'guardian': 9,
      'habitica': 94,
      'hangouts': 4,
      'hardkernel': 357,
      'hardware': 21352,
      'harman_kardon_avr': 3,
      'harmony': 10081,
      'hassio': 193035,
      'hddtemp': 2,
      'hdmi_cec': 67,
      'heos': 6197,
      'here_travel_time': 354,
      'hikvision': 1167,
      'hikvisioncam': 18,
      'hisense_aehw4a1': 38,
      'history': 35110,
      'history_stats': 865,
      'hive': 1436,
      'hlk_sw16': 14,
      'holiday': 1155,
      'home_connect': 5784,
      'home_plus_control': 85,
      'homeassistant': 108327,
      'homeassistant_alerts': 22022,
      'homeassistant_hardware': 310,
      'homeassistant_sky_connect': 13911,
      'homeassistant_yellow': 114,
      'homekit': 46540,
      'homekit_controller': 32230,
      'homematic': 1187,
      'homematicip_cloud': 2030,
      'homewizard': 5398,
      'homeworks': 8,
      'honeywell': 1736,
      'hp_ilo': 12,
      'html5': 58,
      'http': 89834,
      'huawei_lte': 646,
      'hue': 39499,
      'huisbaasje': 43,
      'humidifier': 10005,
      'hunterdouglas_powerview': 519,
      'hvv_departures': 70,
      'hydrawise': 588,
      'hyperion': 1487,
      'ialarm': 27,
      'iammeter': 94,
      'iaqualink': 328,
      'ibeacon': 46067,
      'icloud': 5767,
      'idasen_desk': 125,
      'idteck_prox': 1,
      'ifttt': 7056,
      'ign_sismologia': 2,
      'ihc': 257,
      'image': 11833,
      'image_processing': 1319,
      'image_upload': 16394,
      'imap': 789,
      'imap_email_content': 14,
      'incomfort': 106,
      'influxdb': 21696,
      'inkbird': 1768,
      'input_boolean': 87498,
      'input_button': 45918,
      'input_datetime': 55333,
      'input_number': 67186,
      'input_select': 55495,
      'input_text': 51877,
      'insteon': 1086,
      'integration': 13884,
      'intellifire': 34,
      'intent': 1357,
      'intent_script': 1526,
      'intesishome': 263,
      'ios': 12512,
      'iotawatt': 446,
      'iperf3': 136,
      'ipma': 636,
      'ipp': 68927,
      'iqvia': 567,
      'islamic_prayer_times': 523,
      'iss': 1718,
      'isy994': 415,
      'itach': 3,
      'itunes': 7,
      'izone': 91,
      'jellyfin': 2079,
      'jewish_calendar': 217,
      'joaoapps_join': 177,
      'juicenet': 194,
      'jvc_projector': 29,
      'kaiterra': 51,
      'kaleidescape': 20,
      'keba': 91,
      'keenetic_ndms2': 1945,
      'kef': 51,
      'kegtron': 5,
      'keyboard_remote': 77,
      'keymitt_ble': 9,
      'kira': 8,
      'kitchen_sink': 3,
      'kmtronic': 21,
      'knx': 2931,
      'kodi': 5174,
      'konnected': 1305,
      'kostal_plenticore': 635,
      'kraken': 300,
      'lacrosse': 3,
      'lacrosse_view': 181,
      'lametric': 680,
      'landisgyr_heat_meter': 14,
      'lannouncer': 7,
      'lastfm': 302,
      'launch_library': 279,
      'laundrify': 151,
      'lcn': 38,
      'ld2410_ble': 935,
      'led_ble': 642,
      'lg_netcast': 15,
      'lg_soundbar': 362,
      'lidarr': 312,
      'life360': 2360,
      'lifx': 4829,
      'lifx_cloud': 4,
      'light': 36609,
      'lightwave': 103,
      'limitlessled': 22,
      'linear_garage_door': 2,
      'linksys_smart': 3,
      'linode': 22,
      'linux_battery': 6,
      'lirc': 3,
      'litterrobot': 1349,
      'livisi': 231,
      'llamalab_automate': 1,
      'local_calendar': 17171,
      'local_file': 71,
      'local_ip': 15081,
      'local_todo': 8378,
      'locative': 179,
      'lock': 12257,
      'logbook': 35151,
      'logentries': 1,
      'logger': 41301,
      'logi_circle': 18,
      'london_air': 1,
      'london_underground': 3,
      'lookin': 33,
      'loqed': 211,
      'lovelace': 37644,
      'luci': 36,
      'luftdaten': 735,
      'lupusec': 29,
      'lutron': 116,
      'lutron_caseta': 5293,
      'lyric': 713,
      'mailbox': 3,
      'mailgun': 106,
      'manual': 353,
      'manual_mqtt': 11,
      'map': 31265,
      'marytts': 4,
      'mastodon': 1,
      'matrix': 213,
      'matter': 17099,
      'maxcube': 200,
      'mazda': 66,
      'mcp23017': 1,
      'meater': 1302,
      'media_extractor': 1489,
      'media_player': 32265,
      'media_source': 30841,
      'mediaroom': 36,
      'melcloud': 2786,
      'melissa': 13,
      'melnor': 42,
      'meraki': 4,
      'message_bird': 4,
      'met': 193200,
      'met_eireann': 303,
      'meteo_france': 3916,
      'meteoalarm': 8,
      'meteoclimatic': 158,
      'metoffice': 1787,
      'mfi': 17,
      'microsoft': 11,
      'microsoft_face': 1,
      'miflora': 15,
      'mikrotik': 1761,
      'mill': 892,
      'min_max': 14592,
      'minecraft_server': 1106,
      'minio': 7,
      'mitemp_bt': 24,
      'mjpeg': 6094,
      'moat': 4,
      'mobile_app': 202779,
      'mochad': 25,
      'modbus': 4746,
      'modem_callerid': 24,
      'modern_forms': 340,
      'moehlenhoff_alpha2': 40,
      'mold_indicator': 24,
      'monoprice': 114,
      'moon': 12149,
      'mopeka': 225,
      'motion_blinds': 628,
      'motioneye': 3538,
      'mpd': 82,
      'mqtt': 108113,
      'mqtt_eventstream': 96,
      'mqtt_json': 5,
      'mqtt_room': 465,
      'mqtt_statestream': 573,
      'msteams': 13,
      'mullvad': 121,
      'music_light_switch': 1,
      'mutesync': 61,
      'mvglive': 1,
      'my': 32475,
      'mycroft': 5,
      'myq': 3696,
      'mysensors': 481,
      'mystrom': 601,
      'mythicbeastsdns': 2,
      'nad': 2,
      'nam': 58,
      'namecheapdns': 89,
      'nanoleaf': 3266,
      'neato': 935,
      'nederlandse_spoorwegen': 3,
      'ness_alarm': 40,
      'nest': 12686,
      'netatmo': 11034,
      'netdata': 3,
      'netgear': 2291,
      'netgear_lte': 64,
      'network': 27897,
      'neurio_energy': 1,
      'nexia': 475,
      'nextbus': 16,
      'nextcloud': 1136,
      'nextdns': 500,
      'nfandroidtv': 2838,
      'nibe_heatpump': 285,
      'nightscout': 172,
      'niko_home_control': 11,
      'nina': 2515,
      'nissan_leaf': 296,
      'nmap_tracker': 5171,
      'nmbs': 48,
      'no_ip': 236,
      'noaa_tides': 6,
      'nobo_hub': 82,
      'norway_air': 3,
      'notify': 58782,
      'notify_events': 423,
      'notion': 134,
      'nsw_fuel_station': 98,
      'nsw_rural_fire_service_feed': 2,
      'nuheat': 166,
      'nuki': 1974,
      'numato': 1,
      'number': 15660,
      'nut': 8750,
      'nws': 4082,
      'nx584': 1,
      'nzbget': 320,
      'obihai': 448,
      'octoprint': 9560,
      'ohmconnect': 96,
      'ombi': 67,
      'omnilogic': 86,
      'onboarding': 27672,
      'oncue': 73,
      'ondilo_ico': 153,
      'onewire': 257,
      'onkyo': 145,
      'onvif': 9899,
      'open_meteo': 2590,
      'openai_conversation': 5151,
      'openevse': 1,
      'openexchangerates': 326,
      'opengarage': 425,
      'openhardwaremonitor': 20,
      'openhome': 730,
      'opensensemap': 4,
      'opensky': 404,
      'opentherm_gw': 230,
      'openuv': 1917,
      'openweathermap': 21362,
      'opnsense': 322,
      'opower': 1282,
      'opple': 15,
      'oralb': 7812,
      'oru': 4,
      'orvibo': 14,
      'osoenergy': 10,
      'osramlightify': 58,
      'otbr': 5596,
      'otp': 2,
      'ourgroceries': 469,
      'overkiz': 4492,
      'ovo_energy': 272,
      'owntracks': 2356,
      'ozw': 7,
      'p1_monitor': 338,
      'panasonic_bluray': 3,
      'panasonic_viera': 1191,
      'panel_custom': 7196,
      'panel_iframe': 7752,
      'peco': 57,
      'pegel_online': 219,
      'permobil': 3,
      'persistent_notification': 27681,
      'person': 248256,
      'philips_js': 3285,
      'pi_hole': 7098,
      'picnic': 698,
      'picotts': 21,
      'pilight': 10,
      'ping': 13284,
      'pioneer': 11,
      'pjlink': 6,
      'plaato': 45,
      'plant': 1728,
      'plex': 13197,
      'plugwise': 542,
      'plum_lightpad': 1,
      'pocketcasts': 5,
      'point': 25,
      'poolsense': 22,
      'powerwall': 1163,
      'private_ble_device': 414,
      'profiler': 1696,
      'progettihwsw': 2,
      'prometheus': 1447,
      'prosegur': 92,
      'prowl': 9,
      'proximity': 4814,
      'proxmoxve': 1348,
      'proxy': 16,
      'prusalink': 744,
      'ps4': 1727,
      'pure_energie': 59,
      'purpleair': 87,
      'push': 2,
      'pushbullet': 1096,
      'pushover': 2445,
      'pushsafer': 2,
      'pvoutput': 441,
      'pvpc_hourly_pricing': 1229,
      'pyload': 1,
      'python_script': 7050,
      'qbittorrent': 1307,
      'qingping': 698,
      'qld_bushfire': 1,
      'qnap': 1871,
      'qnap_qsw': 52,
      'quantum_gateway': 5,
      'qvr_pro': 44,
      'qwikswitch': 9,
      'rachio': 3084,
      'radarr': 1962,
      'radio_browser': 176070,
      'radiotherm': 104,
      'rainbird': 704,
      'raincloud': 3,
      'rainforest_eagle': 254,
      'rainmachine': 381,
      'random': 180,
      'rapt_ble': 32,
      'raspberry_pi': 5212,
      'raspyrfm': 1,
      'rdw': 772,
      'recollect_waste': 124,
      'recorder': 61879,
      'recswitch': 21,
      'reddit': 2,
      'refoss': 2,
      'rejseplanen': 4,
      'remember_the_milk': 35,
      'remote': 8677,
      'remote_rpi_gpio': 36,
      'renault': 1287,
      'renson': 8,
      'reolink': 12919,
      'repairs': 21514,
      'repetier': 35,
      'rest': 7444,
      'rest_command': 10337,
      'rflink': 835,
      'rfxtrx': 2359,
      'rhasspy': 1020,
      'ridwell': 33,
      'ring': 13663,
      'risco': 276,
      'rituals_perfume_genie': 351,
      'rmvtransport': 2,
      'roborock': 7363,
      'roku': 10092,
      'roomba': 8552,
      'roon': 405,
      'route53': 72,
      'rpi_camera': 86,
      'rpi_gpio': 42,
      'rpi_power': 86861,
      'rpi_rf': 1,
      'rss_feed_template': 29,
      'rtsp_to_webrtc': 2378,
      'ruckus_unleashed': 97,
      'russound_rio': 3,
      'ruuvi_gateway': 72,
      'ruuvitag_ble': 743,
      'rympro': 21,
      'sabnzbd': 1023,
      'safe_mode': 81,
      'saj': 76,
      'samsungtv': 40354,
      'samsungtv_smart': 1,
      'satel_integra': 384,
      'scene': 242257,
      'schedule': 32924,
      'schlage': 479,
      'schluter': 92,
      'scrape': 2436,
      'screenlogic': 309,
      'script': 246128,
      'scsgate': 1,
      'search': 27672,
      'season': 6327,
      'select': 14321,
      'sendgrid': 4,
      'sense': 1635,
      'senseme': 9,
      'sensibo': 2862,
      'sensirion_ble': 52,
      'sensor': 101798,
      'sensorpro': 35,
      'sensorpush': 104,
      'sentry': 63,
      'senz': 90,
      'serial': 21,
      'serial_pm': 2,
      'sesame': 5,
      'seven_segments': 3,
      'seventeentrack': 854,
      'sfr_box': 174,
      'sharkiq': 1272,
      'sharpai': 3,
      'shell_command': 10702,
      'shelly': 44653,
      'shodan': 1,
      'shopping_list': 96171,
      'sia': 478,
      'sighthound': 2,
      'signal_messenger': 10,
      'simplepush': 77,
      'simplisafe': 804,
      'simulated': 1,
      'sinch': 2,
      'siren': 10473,
      'sisyphus': 22,
      'sky_hub': 2,
      'skybell': 68,
      'slack': 521,
      'sleepiq': 956,
      'slide': 109,
      'slimproto': 338,
      'sma': 1717,
      'smappee': 253,
      'smart_meter_texas': 241,
      'smartthings': 10651,
      'smartthings_soundbar': 1,
      'smarttub': 37,
      'smarty': 1,
      'smhi': 1917,
      'sms': 162,
      'smtp': 233,
      'snapcast': 353,
      'snips': 27,
      'snmp': 345,
      'snooz': 53,
      'solaredge': 4777,
      'solarlog': 177,
      'solax': 159,
      'soma': 95,
      'somfy': 32,
      'somfy_mylink': 108,
      'sonarr': 2555,
      'songpal': 1483,
      'sonoff': 1,
      'sonos': 36389,
      'sony_projector': 3,
      'soundtouch': 2080,
      'spaceapi': 3,
      'spc': 46,
      'speedtestdotnet': 23310,
      'spider': 22,
      'splunk': 54,
      'spotify': 24388,
      'sql': 4960,
      'squeezebox': 1398,
      'srp_energy': 82,
      'ssdp': 29607,
      'starline': 299,
      'starlingbank': 3,
      'starlink': 444,
      'statistics': 2149,
      'statsd': 4,
      'steam_online': 1547,
      'stiebel_eltron': 19,
      'stookalert': 443,
      'stookwijzer': 191,
      'stream': 32220,
      'streamlabswater': 18,
      'stt': 8616,
      'subaru': 265,
      'suez_water': 30,
      'sun': 247811,
      'sunweg': 3,
      'supervisord': 2,
      'supla': 109,
      'surepetcare': 838,
      'swiss_hydrological_data': 69,
      'swiss_public_transport': 123,
      'swisscom': 1,
      'switch': 50974,
      'switch_as_x': 36720,
      'switchbee': 3,
      'switchbot': 6961,
      'switchbot_cloud': 1020,
      'switcher_kis': 265,
      'switchmate': 37,
      'syncthing': 448,
      'syncthru': 2507,
      'synology_chat': 4,
      'synology_dsm': 26998,
      'synology_srm': 7,
      'syslog': 8,
      'system_bridge': 214,
      'system_health': 33296,
      'system_log': 29282,
      'systemmonitor': 32242,
      'tado': 8639,
      'tag': 28172,
      'tailscale': 737,
      'tailwind': 44,
      'tami4': 16,
      'tank_utility': 1,
      'tankerkoenig': 2261,
      'tasmota': 26322,
      'tautulli': 1287,
      'tcp': 10,
      'ted5000': 2,
      'telegram': 660,
      'telegram_bot': 14008,
      'tellduslive': 864,
      'tellstick': 230,
      'telnet': 9,
      'temper': 4,
      'template': 50756,
      'tesla': 6,
      'tesla_wall_connector': 2325,
      'tessie': 122,
      'text': 5868,
      'thermobeacon': 614,
      'thermopro': 639,
      'thethingsnetwork': 38,
      'thingspeak': 43,
      'thread': 56573,
      'threshold': 7052,
      'tibber': 5121,
      'tile': 3222,
      'tilt_ble': 84,
      'time': 14,
      'time_date': 1168,
      'timer': 49307,
      'tmb': 10,
      'tod': 4741,
      'todo': 5,
      'todoist': 1150,
      'tolo': 3,
      'tomato': 7,
      'tomorrowio': 1651,
      'toon': 253,
      'torque': 5,
      'totalconnect': 201,
      'touchline': 3,
      'tplink': 23668,
      'tplink_lte': 1,
      'tplink_omada': 1033,
      'traccar': 556,
      'trace': 27575,
      'tractive': 688,
      'tradfri': 5548,
      'trafikverket_camera': 110,
      'trafikverket_ferry': 12,
      'trafikverket_train': 77,
      'trafikverket_weatherstation': 440,
      'transmission': 1793,
      'transport_nsw': 4,
      'trend': 207,
      'tts': 140044,
      'tuya': 48547,
      'twentemilieu': 197,
      'twilio': 984,
      'twilio_call': 18,
      'twilio_sms': 29,
      'twinkly': 3075,
      'twitch': 127,
      'twitter': 4,
      'uk_transport': 4,
      'ukraine_alarm': 555,
      'unifi': 16589,
      'unifi_direct': 5,
      'unifiled': 1,
      'unifiprotect': 10382,
      'universal': 554,
      'upb': 32,
      'upc_connect': 2,
      'update': 15896,
      'updater': 3559,
      'upnp': 84171,
      'uptime': 12332,
      'uptimerobot': 933,
      'usb': 27664,
      'usgs_earthquakes_feed': 9,
      'utility_meter': 27735,
      'uvc': 46,
      'v2c': 32,
      'vacuum': 11051,
      'vallox': 158,
      'valve': 1,
      'vasttrafik': 1,
      'veea': 1,
      'velbus': 79,
      'velux': 291,
      'venstar': 210,
      'vera': 352,
      'verisure': 1468,
      'version': 8944,
      'vesync': 3161,
      'viaggiatreno': 1,
      'vicare': 1495,
      'vilfo': 2,
      'vivotek': 1,
      'vizio': 2630,
      'vlc': 7,
      'vlc_telnet': 4141,
      'vodafone_station': 76,
      'voicerss': 3,
      'voip': 1332,
      'volkszaehler': 1,
      'volumio': 1412,
      'volvooncall': 1228,
      'vulcan': 24,
      'w800rf32': 6,
      'wake_on_lan': 19186,
      'wallbox': 885,
      'waqi': 1539,
      'warnwetter': 2,
      'water_heater': 3028,
      'waterfurnace': 15,
      'watson_tts': 7,
      'watttime': 15,
      'waze_travel_time': 5655,
      'weather': 23585,
      'weather_light_switch': 1,
      'weatherflow': 441,
      'weatherkit': 95,
      'webhook': 28963,
      'webostv': 28423,
      'websocket_api': 28669,
      'weishaupt_wcm_com': 1,
      'wemo': 7182,
      'whirlpool': 231,
      'whois': 365,
      'wiffi': 267,
      'wilight': 3,
      'wirelesstag': 132,
      'withings': 2143,
      'wiz': 8421,
      'wled': 17444,
      'wolflink': 179,
      'workday': 12748,
      'worldclock': 30,
      'worldtidesinfo': 2,
      'worxlandroid': 14,
      'ws66i': 12,
      'wsdot': 1,
      'wyoming': 13699,
      'x10': 2,
      'xbox': 6322,
      'xiaomi': 14,
      'xiaomi_aqara': 2887,
      'xiaomi_ble': 15798,
      'xiaomi_miio': 16242,
      'xiaomi_tv': 19,
      'xmpp': 3,
      'xs1': 4,
      'yale_smart_alarm': 350,
      'yalexs_ble': 953,
      'yamaha': 135,
      'yamaha_musiccast': 4436,
      'yandex_transport': 2,
      'yandextts': 2,
      'yardian': 13,
      'yeelight': 9919,
      'yeelightsunflower': 2,
      'yi': 3,
      'yolink': 990,
      'youless': 321,
      'youtube': 339,
      'zabbix': 50,
      'zamg': 443,
      'zeroconf': 30200,
      'zestimate': 16,
      'zeversolar': 88,
      'zha': 58308,
      'ziggo_mediabox_xl': 3,
      'zodiac': 496,
      'zone': 90365,
      'zoneminder': 256,
      'zwave': 33,
      'zwave_js': 24553,
      'zwave_me': 64,
    }),
  })
# ---
# name: test_integrations
  dict({
    '3_day_blinds': dict({
      'title': '3 Day Blinds',
    }),
    'abode': dict({
      'title': 'Abode',
    }),
    'accuweather': dict({
      'title': 'AccuWeather',
    }),
    'acer_projector': dict({
      'title': 'Acer Projector',
    }),
    'acmeda': dict({
      'title': 'Rollease Acmeda Automate',
    }),
    'actiontec': dict({
      'title': 'Actiontec',
    }),
    'adax': dict({
      'title': 'Adax',
    }),
    'adguard': dict({
      'title': 'AdGuard Home',
    }),
    'ads': dict({
      'title': 'ADS',
    }),
    'advantage_air': dict({
      'title': 'Advantage Air',
    }),
    'aemet': dict({
      'title': 'AEMET OpenData',
    }),
    'aep_ohio': dict({
      'title': 'AEP Ohio',
    }),
    'aep_texas': dict({
      'title': 'AEP Texas',
    }),
    'aftership': dict({
      'title': 'AfterShip',
    }),
    'agent_dvr': dict({
      'title': 'Agent DVR',
    }),
    'air_quality': dict({
      'title': 'Air Quality',
    }),
    'airly': dict({
      'title': 'Airly',
    }),
    'airnow': dict({
      'title': 'AirNow',
    }),
    'airq': dict({
      'title': 'air-Q',
    }),
    'airthings': dict({
      'title': 'Airthings',
    }),
    'airthings_ble': dict({
      'title': 'Airthings BLE',
    }),
    'airtouch4': dict({
      'title': 'AirTouch 4',
    }),
    'airvisual': dict({
      'title': 'AirVisual Cloud',
    }),
    'airvisual_pro': dict({
      'title': 'AirVisual Pro',
    }),
    'airzone': dict({
      'title': 'Airzone',
    }),
    'airzone_cloud': dict({
      'title': 'Airzone Cloud',
    }),
    'aladdin_connect': dict({
      'title': 'Aladdin Connect',
    }),
    'alarm_control_panel': dict({
      'title': 'Alarm control panel',
    }),
    'alarmdecoder': dict({
      'title': 'AlarmDecoder',
    }),
    'alert': dict({
      'title': 'Alert',
    }),
    'alexa': dict({
      'title': 'Amazon Alexa',
    }),
    'alpha_vantage': dict({
      'title': 'Alpha Vantage',
    }),
    'amazon_polly': dict({
      'title': 'Amazon Polly',
    }),
    'amberelectric': dict({
      'title': 'Amber Electric',
    }),
    'ambiclimate': dict({
      'title': 'Ambiclimate',
    }),
    'ambient_station': dict({
      'title': 'Ambient Weather Station',
    }),
    'amcrest': dict({
      'title': 'Amcrest',
    }),
    'amp_motorization': dict({
      'title': 'AMP Motorization',
    }),
    'ampio': dict({
      'title': 'Ampio Smart Smog System',
    }),
    'analytics': dict({
      'title': 'Analytics',
    }),
    'android_ip_webcam': dict({
      'title': 'Android IP Webcam',
    }),
    'androidtv': dict({
      'title': 'Android Debug Bridge',
    }),
    'androidtv_remote': dict({
      'title': 'Android TV Remote',
    }),
    'anel_pwrctrl': dict({
      'title': 'Anel NET-PwrCtrl',
    }),
    'anova': dict({
      'title': 'Anova',
    }),
    'anthemav': dict({
      'title': 'Anthem A/V Receivers',
    }),
    'anwb_energie': dict({
      'title': 'ANWB Energie',
    }),
    'aosmith': dict({
      'title': 'A. O. Smith',
    }),
    'apache_kafka': dict({
      'title': 'Apache Kafka',
    }),
    'apcupsd': dict({
      'title': 'APC UPS Daemon',
    }),
    'api': dict({
      'title': 'Home Assistant API',
    }),
    'appalachianpower': dict({
      'title': 'Appalachian Power',
    }),
    'apple_tv': dict({
      'title': 'Apple TV',
    }),
    'application_credentials': dict({
      'title': 'Application Credentials',
    }),
    'apprise': dict({
      'title': 'Apprise',
    }),
    'aprs': dict({
      'title': 'APRS',
    }),
    'aqualogic': dict({
      'title': 'AquaLogic',
    }),
    'aquostv': dict({
      'title': 'Sharp Aquos TV',
    }),
    'aranet': dict({
      'title': 'Aranet',
    }),
    'arcam_fmj': dict({
      'title': 'Arcam FMJ Receivers',
    }),
    'arest': dict({
      'title': 'aREST',
    }),
    'arris_tg2492lg': dict({
      'title': 'Arris TG2492LG',
    }),
    'aruba': dict({
      'title': 'Aruba',
    }),
    'arwn': dict({
      'title': 'Ambient Radio Weather Network',
    }),
    'aseko_pool_live': dict({
      'title': 'Aseko Pool Live',
    }),
    'assist_pipeline': dict({
      'title': 'Assist pipeline',
    }),
    'asterisk_cdr': dict({
      'title': 'Asterisk Call Detail Records',
    }),
    'asterisk_mbox': dict({
      'title': 'Asterisk Voicemail',
    }),
    'asuswrt': dict({
      'title': 'ASUSWRT',
    }),
    'atag': dict({
      'title': 'Atag',
    }),
    'aten_pe': dict({
      'title': 'ATEN Rack PDU',
    }),
    'atlanticcityelectric': dict({
      'title': 'Atlantic City Electric',
    }),
    'atome': dict({
      'title': 'Atome Linky',
    }),
    'august': dict({
      'title': 'August',
    }),
    'august_ble': dict({
      'title': 'August Bluetooth',
    }),
    'aurora': dict({
      'title': 'Aurora',
    }),
    'aurora_abb_powerone': dict({
      'title': 'Aurora ABB PowerOne Solar PV',
    }),
    'aussie_broadband': dict({
      'title': 'Aussie Broadband',
    }),
    'auth': dict({
      'title': 'Auth',
    }),
    'automation': dict({
      'title': 'Automation',
    }),
    'avea': dict({
      'title': 'Elgato Avea',
    }),
    'avion': dict({
      'title': 'Avi-on',
    }),
    'awair': dict({
      'title': 'Awair',
    }),
    'aws': dict({
      'title': 'Amazon Web Services (AWS)',
    }),
    'axis': dict({
      'title': 'Axis',
    }),
    'azure_devops': dict({
      'title': 'Azure DevOps',
    }),
    'azure_event_hub': dict({
      'title': 'Azure Event Hub',
    }),
    'azure_service_bus': dict({
      'title': 'Azure Service Bus',
    }),
    'backup': dict({
      'title': 'Backup',
    }),
    'baf': dict({
      'title': 'Big Ass Fans',
    }),
    'baidu': dict({
      'title': 'Baidu',
    }),
    'balboa': dict({
      'title': 'Balboa Spa Client',
    }),
    'bayesian': dict({
      'title': 'Bayesian',
    }),
    'bbox': dict({
      'title': 'Bbox',
    }),
    'beewi_smartclim': dict({
      'title': 'BeeWi SmartClim BLE sensor',
    }),
    'bge': dict({
      'title': 'Baltimore Gas and Electric (BGE)',
    }),
    'binary_sensor': dict({
      'title': 'Binary sensor',
    }),
    'bitcoin': dict({
      'title': 'Bitcoin',
    }),
    'bizkaibus': dict({
      'title': 'Bizkaibus',
    }),
    'blackbird': dict({
      'title': 'Monoprice Blackbird Matrix Switch',
    }),
    'blebox': dict({
      'title': 'BleBox devices',
    }),
    'blink': dict({
      'title': 'Blink',
    }),
    'blinksticklight': dict({
      'title': 'BlinkStick',
    }),
    'bliss_automation': dict({
      'title': 'Bliss Automation',
    }),
    'bloc_blinds': dict({
      'title': 'Bloc Blinds',
    }),
    'blockchain': dict({
      'title': 'Blockchain.com',
    }),
    'bloomsky': dict({
      'title': 'BloomSky',
    }),
    'blue_current': dict({
      'title': 'Blue Current',
    }),
    'bluemaestro': dict({
      'title': 'BlueMaestro',
    }),
    'blueprint': dict({
      'title': 'Blueprint',
    }),
    'bluesound': dict({
      'title': 'Bluesound',
    }),
    'bluetooth': dict({
      'title': 'Bluetooth',
    }),
    'bluetooth_adapters': dict({
      'title': 'Bluetooth Adapters',
    }),
    'bluetooth_le_tracker': dict({
      'title': 'Bluetooth LE Tracker',
    }),
    'bluetooth_tracker': dict({
      'title': 'Bluetooth Tracker',
    }),
    'bmw_connected_drive': dict({
      'title': 'BMW Connected Drive',
    }),
    'bond': dict({
      'title': 'Bond',
    }),
    'bosch_shc': dict({
      'title': 'Bosch SHC',
    }),
    'brandt': dict({
      'title': 'Brandt Smart Control',
    }),
    'braviatv': dict({
      'title': 'Sony Bravia TV',
    }),
    'brel_home': dict({
      'title': 'Brel Home',
    }),
    'broadlink': dict({
      'title': 'Broadlink',
    }),
    'brother': dict({
      'title': 'Brother Printer',
    }),
    'brottsplatskartan': dict({
      'title': 'Brottsplatskartan',
    }),
    'browser': dict({
      'title': 'Browser',
    }),
    'brunt': dict({
      'title': 'Brunt Blind Engine',
    }),
    'bsblan': dict({
      'title': 'BSB-Lan',
    }),
    'bswitch': dict({
      'title': 'BSwitch',
    }),
    'bt_home_hub_5': dict({
      'title': 'BT Home Hub 5',
    }),
    'bt_smarthub': dict({
      'title': 'BT Smart Hub',
    }),
    'bthome': dict({
      'title': 'BTHome',
    }),
    'bticino': dict({
      'title': 'BTicino',
    }),
    'bubendorff': dict({
      'title': 'Bubendorff',
    }),
    'buienradar': dict({
      'title': 'Buienradar',
    }),
    'button': dict({
      'title': 'Button',
    }),
    'caldav': dict({
      'title': 'CalDAV',
    }),
    'calendar': dict({
      'title': 'Calendar',
    }),
    'camera': dict({
      'title': 'Camera',
    }),
    'canary': dict({
      'title': 'Canary',
    }),
    'cast': dict({
      'title': 'Google Cast',
    }),
    'ccm15': dict({
      'title': 'Midea CCM15 AC Controller',
    }),
    'cert_expiry': dict({
      'title': 'Certificate Expiry',
    }),
    'channels': dict({
      'title': 'Channels',
    }),
    'circuit': dict({
      'title': 'Unify Circuit',
    }),
    'cisco_ios': dict({
      'title': 'Cisco IOS',
    }),
    'cisco_mobility_express': dict({
      'title': 'Cisco Mobility Express',
    }),
    'cisco_webex_teams': dict({
      'title': 'Cisco Webex Teams',
    }),
    'citybikes': dict({
      'title': 'CityBikes',
    }),
    'clementine': dict({
      'title': 'Clementine Music Player',
    }),
    'clickatell': dict({
      'title': 'Clickatell',
    }),
    'clicksend': dict({
      'title': 'ClickSend SMS',
    }),
    'clicksend_tts': dict({
      'title': 'ClickSend TTS',
    }),
    'climate': dict({
      'title': 'Climate',
    }),
    'cloud': dict({
      'title': 'Home Assistant Cloud',
    }),
    'cloudflare': dict({
      'title': 'Cloudflare',
    }),
    'cmus': dict({
      'title': 'cmus',
    }),
    'co2signal': dict({
      'title': 'Electricity Maps',
    }),
    'coinbase': dict({
      'title': 'Coinbase',
    }),
    'color_extractor': dict({
      'title': 'ColorExtractor',
    }),
    'comed': dict({
      'title': 'Commonwealth Edison (ComEd)',
    }),
    'comed_hourly_pricing': dict({
      'title': 'ComEd Hourly Pricing',
    }),
    'comelit': dict({
      'title': 'Comelit SimpleHome',
    }),
    'comfoconnect': dict({
      'title': 'Zehnder ComfoAir Q',
    }),
    'command_line': dict({
      'title': 'Command Line',
    }),
    'compensation': dict({
      'title': 'Compensation',
    }),
    'concord232': dict({
      'title': 'Concord232',
    }),
    'coned': dict({
      'title': 'Consolidated Edison (ConEd)',
    }),
    'config': dict({
      'title': 'Configuration',
    }),
    'configurator': dict({
      'title': 'Configurator',
    }),
    'control4': dict({
      'title': 'Control4',
    }),
    'conversation': dict({
      'title': 'Conversation',
    }),
    'coolmaster': dict({
      'title': 'CoolMasterNet',
    }),
    'counter': dict({
      'title': 'Counter',
    }),
    'cover': dict({
      'title': 'Cover',
    }),
    'cozytouch': dict({
      'title': 'Atlantic Cozytouch',
    }),
    'cppm_tracker': dict({
      'title': 'Aruba ClearPass',
    }),
    'cpuspeed': dict({
      'title': 'CPU Speed',
    }),
    'cribl': dict({
      'title': 'Cribl',
    }),
    'crownstone': dict({
      'title': 'Crownstone',
    }),
    'cups': dict({
      'title': 'CUPS',
    }),
    'currencylayer': dict({
      'title': 'currencylayer',
    }),
    'dacia': dict({
      'title': 'Dacia',
    }),
    'daikin': dict({
      'title': 'Daikin AC',
    }),
    'danfoss_air': dict({
      'title': 'Danfoss Air',
    }),
    'datadog': dict({
      'title': 'Datadog',
    }),
    'date': dict({
      'title': 'Date',
    }),
    'datetime': dict({
      'title': 'Date/Time',
    }),
    'ddwrt': dict({
      'title': 'DD-WRT',
    }),
    'debugpy': dict({
      'title': 'Remote Python Debugger',
    }),
    'deconz': dict({
      'title': 'deCONZ',
    }),
    'decora': dict({
      'title': 'Leviton Decora',
    }),
    'decora_wifi': dict({
      'title': 'Leviton Decora Wi-Fi',
    }),
    'default_config': dict({
      'title': 'Default Config',
    }),
    'delijn': dict({
      'title': 'De Lijn',
    }),
    'delmarva': dict({
      'title': 'Delmarva Power',
    }),
    'deluge': dict({
      'title': 'Deluge',
    }),
    'demo': dict({
      'title': 'Demo',
    }),
    'denon': dict({
      'title': 'Denon Network Receivers',
    }),
    'denonavr': dict({
      'title': 'Denon AVR Network Receivers',
    }),
    'derivative': dict({
      'title': 'Derivative',
    }),
    'devialet': dict({
      'title': 'Devialet',
    }),
    'device_automation': dict({
      'title': 'Device Automation',
    }),
    'device_sun_light_trigger': dict({
      'title': 'Presence-based lights',
    }),
    'device_tracker': dict({
      'title': 'Device tracker',
    }),
    'devolo_home_control': dict({
      'title': 'devolo Home Control',
    }),
    'devolo_home_network': dict({
      'title': 'devolo Home Network',
    }),
    'dexcom': dict({
      'title': 'Dexcom',
    }),
    'dhcp': dict({
      'title': 'DHCP discovery',
    }),
    'diagnostics': dict({
      'title': 'Diagnostics',
    }),
    'dialogflow': dict({
      'title': 'Dialogflow',
    }),
    'diaz': dict({
      'title': 'Diaz',
    }),
    'digital_loggers': dict({
      'title': 'Digital Loggers',
    }),
    'digital_ocean': dict({
      'title': 'Digital Ocean',
    }),
    'directv': dict({
      'title': 'DirecTV',
    }),
    'discogs': dict({
      'title': 'Discogs',
    }),
    'discord': dict({
      'title': 'Discord',
    }),
    'discovergy': dict({
      'title': 'Discovergy',
    }),
    'dlib_face_detect': dict({
      'title': 'Dlib Face Detect',
    }),
    'dlib_face_identify': dict({
      'title': 'Dlib Face Identify',
    }),
    'dlink': dict({
      'title': 'D-Link Wi-Fi Smart Plugs',
    }),
    'dlna_dmr': dict({
      'title': 'DLNA Digital Media Renderer',
    }),
    'dlna_dms': dict({
      'title': 'DLNA Digital Media Server',
    }),
    'dnsip': dict({
      'title': 'DNS IP',
    }),
    'dominos': dict({
      'title': 'Dominos Pizza',
    }),
    'doods': dict({
      'title': 'DOODS - Dedicated Open Object Detection Service',
    }),
    'doorbird': dict({
      'title': 'DoorBird',
    }),
    'dooya': dict({
      'title': 'Dooya',
    }),
    'dormakaba_dkey': dict({
      'title': 'Dormakaba dKey',
    }),
    'dovado': dict({
      'title': 'Dovado',
    }),
    'downloader': dict({
      'title': 'Downloader',
    }),
    'dremel_3d_printer': dict({
      'title': 'Dremel 3D Printer',
    }),
    'drop_connect': dict({
      'title': 'DROP',
    }),
    'dsmr': dict({
      'title': 'DSMR Slimme Meter',
    }),
    'dsmr_reader': dict({
      'title': 'DSMR Reader',
    }),
    'dte_energy_bridge': dict({
      'title': 'DTE Energy Bridge',
    }),
    'dublin_bus_transport': dict({
      'title': 'Dublin Bus',
    }),
    'duckdns': dict({
      'title': 'Duck DNS',
    }),
    'dunehd': dict({
      'title': 'Dune HD',
    }),
    'duotecno': dict({
      'title': 'Duotecno',
    }),
    'dwd_weather_warnings': dict({
      'title': 'Deutscher Wetterdienst (DWD) Weather Warnings',
    }),
    'dweet': dict({
      'title': 'dweet.io',
    }),
    'dynalite': dict({
      'title': 'Philips Dynalite',
    }),
    'eastron': dict({
      'title': 'Eastron',
    }),
    'easyenergy': dict({
      'title': 'easyEnergy',
    }),
    'ebox': dict({
      'title': 'EBox',
    }),
    'ebusd': dict({
      'title': 'ebusd',
    }),
    'ecoal_boiler': dict({
      'title': 'eSterownik eCoal.pl Boiler',
    }),
    'ecobee': dict({
      'title': 'ecobee',
    }),
    'ecoforest': dict({
      'title': 'Ecoforest',
    }),
    'econet': dict({
      'title': 'Rheem EcoNet Products',
    }),
    'ecovacs': dict({
      'title': 'Ecovacs',
    }),
    'ecowitt': dict({
      'title': 'Ecowitt',
    }),
    'eddystone_temperature': dict({
      'title': 'Eddystone',
    }),
    'edimax': dict({
      'title': 'Edimax',
    }),
    'edl21': dict({
      'title': 'EDL21',
    }),
    'efergy': dict({
      'title': 'Efergy',
    }),
    'egardia': dict({
      'title': 'Egardia',
    }),
    'electrasmart': dict({
      'title': 'Electra Smart',
    }),
    'electric_kiwi': dict({
      'title': 'Electric Kiwi',
    }),
    'elgato': dict({
      'title': 'Elgato Light',
    }),
    'eliqonline': dict({
      'title': 'Eliqonline',
    }),
    'elkm1': dict({
      'title': 'Elk-M1 Control',
    }),
    'elmax': dict({
      'title': 'Elmax',
    }),
    'elv': dict({
      'title': 'ELV PCA',
    }),
    'emby': dict({
      'title': 'Emby',
    }),
    'emoncms': dict({
      'title': 'Emoncms',
    }),
    'emoncms_history': dict({
      'title': 'Emoncms History',
    }),
    'emonitor': dict({
      'title': 'SiteSage Emonitor',
    }),
    'emulated_hue': dict({
      'title': 'Emulated Hue',
    }),
    'emulated_kasa': dict({
      'title': 'Emulated Kasa',
    }),
    'emulated_roku': dict({
      'title': 'Emulated Roku',
    }),
    'energie_vanons': dict({
      'title': 'Energie VanOns',
    }),
    'energy': dict({
      'title': 'Energy',
    }),
    'energyzero': dict({
      'title': 'EnergyZero',
    }),
    'enigma2': dict({
      'title': 'Enigma2 (OpenWebif)',
    }),
    'enmax': dict({
      'title': 'Enmax Energy',
    }),
    'enocean': dict({
      'title': 'EnOcean',
    }),
    'enphase_envoy': dict({
      'title': 'Enphase Envoy',
    }),
    'entur_public_transport': dict({
      'title': 'Entur',
    }),
    'environment_canada': dict({
      'title': 'Environment Canada',
    }),
    'envisalink': dict({
      'title': 'Envisalink',
    }),
    'ephember': dict({
      'title': 'EPH Controls',
    }),
    'epson': dict({
      'title': 'Epson',
    }),
    'epsonworkforce': dict({
      'title': 'Epson Workforce',
    }),
    'escea': dict({
      'title': 'Escea',
    }),
    'esera_onewire': dict({
      'title': 'ESERA 1-Wire',
    }),
    'esphome': dict({
      'title': 'ESPHome',
    }),
    'etherscan': dict({
      'title': 'Etherscan',
    }),
    'eufy': dict({
      'title': 'EufyHome',
    }),
    'eufylife_ble': dict({
      'title': 'EufyLife',
    }),
    'event': dict({
      'title': 'Event',
    }),
    'evergy': dict({
      'title': 'Evergy',
    }),
    'everlights': dict({
      'title': 'EverLights',
    }),
    'evil_genius_labs': dict({
      'title': 'Evil Genius Labs',
    }),
    'evohome': dict({
      'title': 'Honeywell Total Connect Comfort (Europe)',
    }),
    'ezviz': dict({
      'title': 'EZVIZ',
    }),
    'faa_delays': dict({
      'title': 'FAA Delays',
    }),
    'facebook': dict({
      'title': 'Facebook Messenger',
    }),
    'facebox': dict({
      'title': 'Facebox',
    }),
    'fail2ban': dict({
      'title': 'Fail2Ban',
    }),
    'familyhub': dict({
      'title': 'Samsung Family Hub',
    }),
    'fan': dict({
      'title': 'Fan',
    }),
    'fastdotcom': dict({
      'title': 'Fast.com',
    }),
    'feedreader': dict({
      'title': 'Feedreader',
    }),
    'ffmpeg': dict({
      'title': 'FFmpeg',
    }),
    'ffmpeg_motion': dict({
      'title': 'FFmpeg Motion',
    }),
    'ffmpeg_noise': dict({
      'title': 'FFmpeg Noise',
    }),
    'fibaro': dict({
      'title': 'Fibaro',
    }),
    'fido': dict({
      'title': 'Fido',
    }),
    'file': dict({
      'title': 'File',
    }),
    'file_upload': dict({
      'title': 'File Upload',
    }),
    'filesize': dict({
      'title': 'File Size',
    }),
    'filter': dict({
      'title': 'Filter',
    }),
    'fints': dict({
      'title': 'FinTS',
    }),
    'fire_tv': dict({
      'title': 'Amazon Fire TV',
    }),
    'fireservicerota': dict({
      'title': 'FireServiceRota',
    }),
    'firmata': dict({
      'title': 'Firmata',
    }),
    'fitbit': dict({
      'title': 'Fitbit',
    }),
    'fivem': dict({
      'title': 'FiveM',
    }),
    'fixer': dict({
      'title': 'Fixer',
    }),
    'fjaraskupan': dict({
      'title': 'Fjäråskupan',
    }),
    'fleetgo': dict({
      'title': 'FleetGO',
    }),
    'flexit': dict({
      'title': 'Flexit',
    }),
    'flexit_bacnet': dict({
      'title': 'Flexit Nordic (BACnet)',
    }),
    'flexom': dict({
      'title': 'Bouygues Flexom',
    }),
    'flic': dict({
      'title': 'Flic',
    }),
    'flick_electric': dict({
      'title': 'Flick Electric',
    }),
    'flipr': dict({
      'title': 'Flipr',
    }),
    'flo': dict({
      'title': 'Flo',
    }),
    'flock': dict({
      'title': 'Flock',
    }),
    'flume': dict({
      'title': 'Flume',
    }),
    'flux': dict({
      'title': 'Flux',
    }),
    'flux_led': dict({
      'title': 'Magic Home',
    }),
    'folder': dict({
      'title': 'Folder',
    }),
    'folder_watcher': dict({
      'title': 'Folder Watcher',
    }),
    'foobot': dict({
      'title': 'Foobot',
    }),
    'forecast_solar': dict({
      'title': 'Forecast.Solar',
    }),
    'forked_daapd': dict({
      'title': 'OwnTone',
    }),
    'fortios': dict({
      'title': 'FortiOS',
    }),
    'foscam': dict({
      'title': 'Foscam',
    }),
    'foursquare': dict({
      'title': 'Foursquare',
    }),
    'free_mobile': dict({
      'title': 'Free Mobile',
    }),
    'freebox': dict({
      'title': 'Freebox',
    }),
    'freedns': dict({
      'title': 'FreeDNS',
    }),
    'freedompro': dict({
      'title': 'Freedompro',
    }),
    'fritz': dict({
      'title': 'AVM FRITZ!Box Tools',
    }),
    'fritzbox': dict({
      'title': 'AVM FRITZ!SmartHome',
    }),
    'fritzbox_callmonitor': dict({
      'title': 'AVM FRITZ!Box Call Monitor',
    }),
    'fronius': dict({
      'title': 'Fronius',
    }),
    'frontend': dict({
      'title': 'Home Assistant frontend',
    }),
    'frontier_silicon': dict({
      'title': 'Frontier Silicon',
    }),
    'fujitsu_anywair': dict({
      'title': 'Fujitsu anywAIR',
    }),
    'fully_kiosk': dict({
      'title': 'Fully Kiosk Browser',
    }),
    'futurenow': dict({
      'title': 'P5 FutureNow',
    }),
    'garadget': dict({
      'title': 'Garadget',
    }),
    'garages_amsterdam': dict({
      'title': 'Garages Amsterdam',
    }),
    'gardena_bluetooth': dict({
      'title': 'Gardena Bluetooth',
    }),
    'gaviota': dict({
      'title': 'Gaviota',
    }),
    'gc100': dict({
      'title': 'Global Caché GC-100',
    }),
    'gdacs': dict({
      'title': 'Global Disaster Alert and Coordination System (GDACS)',
    }),
    'generic': dict({
      'title': 'Generic Camera',
    }),
    'generic_hygrostat': dict({
      'title': 'Generic hygrostat',
    }),
    'generic_thermostat': dict({
      'title': 'Generic thermostat',
    }),
    'geniushub': dict({
      'title': 'Genius Hub',
    }),
    'geo_json_events': dict({
      'title': 'GeoJSON',
    }),
    'geo_location': dict({
      'title': 'Geolocation',
    }),
    'geo_rss_events': dict({
      'title': 'GeoRSS',
    }),
    'geocaching': dict({
      'title': 'Geocaching',
    }),
    'geofency': dict({
      'title': 'Geofency',
    }),
    'geonetnz_quakes': dict({
      'title': 'GeoNet NZ Quakes',
    }),
    'geonetnz_volcano': dict({
      'title': 'GeoNet NZ Volcano',
    }),
    'gios': dict({
      'title': 'GIOŚ',
    }),
    'github': dict({
      'title': 'GitHub',
    }),
    'gitlab_ci': dict({
      'title': 'GitLab-CI',
    }),
    'gitter': dict({
      'title': 'Gitter',
    }),
    'glances': dict({
      'title': 'Glances',
    }),
    'goalzero': dict({
      'title': 'Goal Zero Yeti',
    }),
    'gogogate2': dict({
      'title': 'Gogogate2 and ismartgate',
    }),
    'goodwe': dict({
      'title': 'GoodWe Inverter',
    }),
    'google': dict({
      'title': 'Google Calendar',
    }),
    'google_assistant': dict({
      'title': 'Google Assistant',
    }),
    'google_assistant_sdk': dict({
      'title': 'Google Assistant SDK',
    }),
    'google_cloud': dict({
      'title': 'Google Cloud Platform',
    }),
    'google_domains': dict({
      'title': 'Google Domains',
    }),
    'google_generative_ai_conversation': dict({
      'title': 'Google Generative AI Conversation',
    }),
    'google_mail': dict({
      'title': 'Google Mail',
    }),
    'google_maps': dict({
      'title': 'Google Maps',
    }),
    'google_pubsub': dict({
      'title': 'Google Pub/Sub',
    }),
    'google_sheets': dict({
      'title': 'Google Sheets',
    }),
    'google_tasks': dict({
      'title': 'Google Tasks',
    }),
    'google_translate': dict({
      'title': 'Google Translate text-to-speech',
    }),
    'google_travel_time': dict({
      'title': 'Google Maps Travel Time',
    }),
    'google_wifi': dict({
      'title': 'Google Wifi',
    }),
    'govee_ble': dict({
      'title': 'Govee Bluetooth',
    }),
    'gpsd': dict({
      'title': 'GPSD',
    }),
    'gpslogger': dict({
      'title': 'GPSLogger',
    }),
    'graphite': dict({
      'title': 'Graphite',
    }),
    'gree': dict({
      'title': 'Gree Climate',
    }),
    'greeneye_monitor': dict({
      'title': 'GreenEye Monitor (GEM)',
    }),
    'greenwave': dict({
      'title': 'Greenwave Reality',
    }),
    'group': dict({
      'title': 'Group',
    }),
    'growatt_server': dict({
      'title': 'Growatt',
    }),
    'gstreamer': dict({
      'title': 'GStreamer',
    }),
    'gtfs': dict({
      'title': 'General Transit Feed Specification (GTFS)',
    }),
    'guardian': dict({
      'title': 'Elexa Guardian',
    }),
    'habitica': dict({
      'title': 'Habitica',
    }),
    'hardware': dict({
      'title': 'Hardware',
    }),
    'harman_kardon_avr': dict({
      'title': 'Harman Kardon AVR',
    }),
    'harmony': dict({
      'title': 'Logitech Harmony Hub',
    }),
    'hassio': dict({
      'title': 'Home Assistant Supervisor',
    }),
    'havana_shade': dict({
      'title': 'Havana Shade',
    }),
    'haveibeenpwned': dict({
      'title': 'HaveIBeenPwned',
    }),
    'hddtemp': dict({
      'title': 'hddtemp',
    }),
    'hdmi_cec': dict({
      'title': 'HDMI-CEC',
    }),
    'heatmiser': dict({
      'title': 'Heatmiser',
    }),
    'heiwa': dict({
      'title': 'Heiwa',
    }),
    'heltun': dict({
      'title': 'HELTUN',
    }),
    'heos': dict({
      'title': 'Denon HEOS',
    }),
    'here_travel_time': dict({
      'title': 'HERE Travel Time',
    }),
    'hexaom': dict({
      'title': 'Hexaom Hexaconnect',
    }),
    'hi_kumo': dict({
      'title': 'Hitachi Hi Kumo',
    }),
    'hikvision': dict({
      'title': 'Hikvision',
    }),
    'hikvisioncam': dict({
      'title': 'Hikvision',
    }),
    'hisense_aehw4a1': dict({
      'title': 'Hisense AEH-W4A1',
    }),
    'history': dict({
      'title': 'History',
    }),
    'history_stats': dict({
      'title': 'History Stats',
    }),
    'hitron_coda': dict({
      'title': 'Rogers Hitron CODA',
    }),
    'hive': dict({
      'title': 'Hive',
    }),
    'hlk_sw16': dict({
      'title': 'Hi-Link HLK-SW16',
    }),
    'holiday': dict({
      'title': 'Holiday',
    }),
    'home_connect': dict({
      'title': 'Home Connect',
    }),
    'home_plus_control': dict({
      'title': 'Legrand Home+ Control',
    }),
    'homeassistant': dict({
      'title': 'Home Assistant Core Integration',
    }),
    'homeassistant_alerts': dict({
      'title': 'Home Assistant Alerts',
    }),
    'homeassistant_green': dict({
      'title': 'Home Assistant Green',
    }),
    'homeassistant_hardware': dict({
      'title': 'Home Assistant Hardware',
    }),
    'homeassistant_sky_connect': dict({
      'title': 'Home Assistant SkyConnect',
    }),
    'homeassistant_yellow': dict({
      'title': 'Home Assistant Yellow',
    }),
    'homekit': dict({
      'title': 'HomeKit Bridge',
    }),
    'homekit_controller': dict({
      'title': 'HomeKit Device',
    }),
    'homematic': dict({
      'title': 'Homematic',
    }),
    'homematicip_cloud': dict({
      'title': 'HomematicIP Cloud',
    }),
    'homeseer': dict({
      'title': 'HomeSeer',
    }),
    'homewizard': dict({
      'title': 'HomeWizard Energy',
    }),
    'homeworks': dict({
      'title': 'Lutron Homeworks',
    }),
    'honeywell': dict({
      'title': 'Honeywell Total Connect Comfort (US)',
    }),
    'horizon': dict({
      'title': 'Unitymedia Horizon HD Recorder',
    }),
    'hp_ilo': dict({
      'title': 'HP Integrated Lights-Out (ILO)',
    }),
    'html5': dict({
      'title': 'HTML5 Push Notifications',
    }),
    'http': dict({
      'title': 'HTTP',
    }),
    'huawei_lte': dict({
      'title': 'Huawei LTE',
    }),
    'hue': dict({
      'title': 'Philips Hue',
    }),
    'huisbaasje': dict({
      'title': 'Huisbaasje',
    }),
    'humidifier': dict({
      'title': 'Humidifier',
    }),
    'hunterdouglas_powerview': dict({
      'title': 'Hunter Douglas PowerView',
    }),
    'hurrican_shutters_wholesale': dict({
      'title': 'Hurrican Shutters Wholesale',
    }),
    'hvv_departures': dict({
      'title': 'HVV Departures',
    }),
    'hydrawise': dict({
      'title': 'Hunter Hydrawise',
    }),
    'hyperion': dict({
      'title': 'Hyperion',
    }),
    'ialarm': dict({
      'title': 'Antifurto365 iAlarm',
    }),
    'iammeter': dict({
      'title': 'IamMeter',
    }),
    'iaqualink': dict({
      'title': 'Jandy iAqualink',
    }),
    'ibeacon': dict({
      'title': 'iBeacon Tracker',
    }),
    'icloud': dict({
      'title': 'Apple iCloud',
    }),
    'idasen_desk': dict({
      'title': 'IKEA Idasen Desk',
    }),
    'idteck_prox': dict({
      'title': 'IDTECK Proximity Reader',
    }),
    'ifttt': dict({
      'title': 'IFTTT',
    }),
    'iglo': dict({
      'title': 'iGlo',
    }),
    'ign_sismologia': dict({
      'title': 'IGN Sismología',
    }),
    'ihc': dict({
      'title': 'IHC Controller',
    }),
    'image': dict({
      'title': 'Image',
    }),
    'image_processing': dict({
      'title': 'Image processing',
    }),
    'image_upload': dict({
      'title': 'Image Upload',
    }),
    'imap': dict({
      'title': 'IMAP',
    }),
    'improv_ble': dict({
      'title': 'Improv via BLE',
    }),
    'incomfort': dict({
      'title': 'Intergas InComfort/Intouch Lan2RF gateway',
    }),
    'indianamichiganpower': dict({
      'title': 'Indiana Michigan Power',
    }),
    'influxdb': dict({
      'title': 'InfluxDB',
    }),
    'inkbird': dict({
      'title': 'INKBIRD',
    }),
    'input_boolean': dict({
      'title': 'Input Boolean',
    }),
    'input_button': dict({
      'title': 'Input Button',
    }),
    'input_datetime': dict({
      'title': 'Input Datetime',
    }),
    'input_number': dict({
      'title': 'Input Number',
    }),
    'input_select': dict({
      'title': 'Input Select',
    }),
    'input_text': dict({
      'title': 'Input Text',
    }),
    'inspired_shades': dict({
      'title': 'Inspired Shades',
    }),
    'insteon': dict({
      'title': 'Insteon',
    }),
    'integration': dict({
      'title': 'Integration - Riemann sum integral',
    }),
    'intellifire': dict({
      'title': 'IntelliFire',
    }),
    'intent_script': dict({
      'title': 'Intent Script',
    }),
    'intesishome': dict({
      'title': 'IntesisHome',
    }),
    'ios': dict({
      'title': 'Home Assistant iOS',
    }),
    'iotawatt': dict({
      'title': 'IoTaWatt',
    }),
    'iperf3': dict({
      'title': 'Iperf3',
    }),
    'ipma': dict({
      'title': 'Instituto Português do Mar e Atmosfera (IPMA)',
    }),
    'iqvia': dict({
      'title': 'IQVIA',
    }),
    'irish_rail_transport': dict({
      'title': 'Irish Rail Transport',
    }),
    'islamic_prayer_times': dict({
      'title': 'Islamic Prayer Times',
    }),
    'ismartwindow': dict({
      'title': 'iSmartWindow',
    }),
    'iss': dict({
      'title': 'International Space Station (ISS)',
    }),
    'isy994': dict({
      'title': 'Universal Devices ISY/IoX',
    }),
    'itach': dict({
      'title': 'Global Caché iTach TCP/IP to IR',
    }),
    'itunes': dict({
      'title': 'Apple iTunes',
    }),
    'izone': dict({
      'title': 'iZone',
    }),
    'jasco': dict({
      'title': 'Jasco',
    }),
    'jellyfin': dict({
      'title': 'Jellyfin',
    }),
    'jewish_calendar': dict({
      'title': 'Jewish Calendar',
    }),
    'joaoapps_join': dict({
      'title': 'Joaoapps Join',
    }),
    'juicenet': dict({
      'title': 'JuiceNet',
    }),
    'justnimbus': dict({
      'title': 'JustNimbus',
    }),
    'jvc_projector': dict({
      'title': 'JVC Projector',
    }),
    'kaiterra': dict({
      'title': 'Kaiterra',
    }),
    'kaleidescape': dict({
      'title': 'Kaleidescape',
    }),
    'kankun': dict({
      'title': 'Kankun',
    }),
    'keba': dict({
      'title': 'Keba Charging Station',
    }),
    'keenetic_ndms2': dict({
      'title': 'Keenetic NDMS2 Router',
    }),
    'kef': dict({
      'title': 'KEF',
    }),
    'kegtron': dict({
      'title': 'Kegtron',
    }),
    'kentuckypower': dict({
      'title': 'Kentucky Power',
    }),
    'keyboard': dict({
      'title': 'Keyboard',
    }),
    'keyboard_remote': dict({
      'title': 'Keyboard Remote',
    }),
    'keymitt_ble': dict({
      'title': 'Keymitt MicroBot Push',
    }),
    'kira': dict({
      'title': 'Kira',
    }),
    'kitchen_sink': dict({
      'title': 'Everything but the Kitchen Sink',
    }),
    'kiwi': dict({
      'title': 'KIWI',
    }),
    'kmtronic': dict({
      'title': 'KMtronic',
    }),
    'knx': dict({
      'title': 'KNX',
    }),
    'kodi': dict({
      'title': 'Kodi',
    }),
    'konnected': dict({
      'title': 'Konnected.io',
    }),
    'kostal_plenticore': dict({
      'title': 'Kostal Plenticore Solar Inverter',
    }),
    'kraken': dict({
      'title': 'Kraken',
    }),
    'kulersky': dict({
      'title': 'Kuler Sky',
    }),
    'kwb': dict({
      'title': 'KWB Easyfire',
    }),
    'lacrosse': dict({
      'title': 'LaCrosse',
    }),
    'lacrosse_view': dict({
      'title': 'LaCrosse View',
    }),
    'lametric': dict({
      'title': 'LaMetric',
    }),
    'landisgyr_heat_meter': dict({
      'title': 'Landis+Gyr Heat Meter',
    }),
    'lannouncer': dict({
      'title': 'LANnouncer',
    }),
    'lastfm': dict({
      'title': 'Last.fm',
    }),
    'launch_library': dict({
      'title': 'Launch Library',
    }),
    'laundrify': dict({
      'title': 'laundrify',
    }),
    'lawn_mower': dict({
      'title': 'Lawn mower',
    }),
    'lcn': dict({
      'title': 'LCN',
    }),
    'ld2410_ble': dict({
      'title': 'LD2410 BLE',
    }),
    'led_ble': dict({
      'title': 'LED BLE',
    }),
    'legrand': dict({
      'title': 'Legrand',
    }),
    'leviton_z_wave': dict({
      'title': 'Leviton Z-Wave',
    }),
    'lg_netcast': dict({
      'title': 'LG Netcast',
    }),
    'lg_soundbar': dict({
      'title': 'LG Soundbars',
    }),
    'lidarr': dict({
      'title': 'Lidarr',
    }),
    'life360': dict({
      'title': 'Life360',
    }),
    'lifx': dict({
      'title': 'LIFX',
    }),
    'lifx_cloud': dict({
      'title': 'LIFX Cloud',
    }),
    'light': dict({
      'title': 'Light',
    }),
    'lightwave': dict({
      'title': 'Lightwave',
    }),
    'limitlessled': dict({
      'title': 'LimitlessLED',
    }),
    'linear_garage_door': dict({
      'title': 'Linear Garage Door',
    }),
    'linksys_smart': dict({
      'title': 'Linksys Smart Wi-Fi',
    }),
    'linode': dict({
      'title': 'Linode',
    }),
    'linux_battery': dict({
      'title': 'Linux Battery',
    }),
    'lirc': dict({
      'title': 'LIRC',
    }),
    'litejet': dict({
      'title': 'LiteJet',
    }),
    'litterrobot': dict({
      'title': 'Litter-Robot',
    }),
    'livisi': dict({
      'title': 'LIVISI Smart Home',
    }),
    'llamalab_automate': dict({
      'title': 'LlamaLab Automate',
    }),
    'local_calendar': dict({
      'title': 'Local Calendar',
    }),
    'local_file': dict({
      'title': 'Local File',
    }),
    'local_ip': dict({
      'title': 'Local IP Address',
    }),
    'local_todo': dict({
      'title': 'Local To-do',
    }),
    'lock': dict({
      'title': 'Lock',
    }),
    'logbook': dict({
      'title': 'Logbook',
    }),
    'logentries': dict({
      'title': 'Logentries',
    }),
    'logger': dict({
      'title': 'Logger',
    }),
    'logi_circle': dict({
      'title': 'Logi Circle',
    }),
    'london_air': dict({
      'title': 'London Air',
    }),
    'london_underground': dict({
      'title': 'London Underground',
    }),
    'lookin': dict({
      'title': 'LOOKin',
    }),
    'loqed': dict({
      'title': 'LOQED Touch Smart Lock',
    }),
    'luci': dict({
      'title': 'OpenWrt (luci)',
    }),
    'luftdaten': dict({
      'title': 'Sensor.Community',
    }),
    'lupusec': dict({
      'title': 'Lupus Electronics LUPUSEC',
    }),
    'lutron': dict({
      'title': 'Lutron',
    }),
    'lutron_caseta': dict({
      'title': 'Lutron Caséta',
    }),
    'luxaflex': dict({
      'title': 'Luxaflex',
    }),
    'lw12wifi': dict({
      'title': 'LAGUTE LW-12',
    }),
    'lyric': dict({
      'title': 'Honeywell Lyric',
    }),
    'mailbox': dict({
      'title': 'Mailbox',
    }),
    'mailgun': dict({
      'title': 'Mailgun',
    }),
    'manual': dict({
      'title': 'Manual Alarm control panel',
    }),
    'manual_mqtt': dict({
      'title': 'Manual MQTT Alarm control panel',
    }),
    'map': dict({
      'title': 'Map',
    }),
    'marantz': dict({
      'title': 'Marantz',
    }),
    'martec': dict({
      'title': 'Martec',
    }),
    'marytts': dict({
      'title': 'MaryTTS',
    }),
    'mastodon': dict({
      'title': 'Mastodon',
    }),
    'matrix': dict({
      'title': 'Matrix',
    }),
    'matter': dict({
      'title': 'Matter (BETA)',
    }),
    'maxcube': dict({
      'title': 'eQ-3 MAX!',
    }),
    'meater': dict({
      'title': 'Meater',
    }),
    'medcom_ble': dict({
      'title': 'Medcom Bluetooth',
    }),
    'media_extractor': dict({
      'title': 'Media extractor',
    }),
    'media_player': dict({
      'title': 'Media player',
    }),
    'media_source': dict({
      'title': 'Media source',
    }),
    'mediaroom': dict({
      'title': 'Mediaroom',
    }),
    'melcloud': dict({
      'title': 'MELCloud',
    }),
    'melissa': dict({
      'title': 'Melissa',
    }),
    'melnor': dict({
      'title': 'Melnor Bluetooth',
    }),
    'meraki': dict({
      'title': 'Meraki',
    }),
    'message_bird': dict({
      'title': 'MessageBird',
    }),
    'met': dict({
      'title': 'Meteorologisk institutt (Met.no)',
    }),
    'met_eireann': dict({
      'title': 'Met Éireann',
    }),
    'meteo_france': dict({
      'title': 'Météo-France',
    }),
    'meteoalarm': dict({
      'title': 'MeteoAlarm',
    }),
    'meteoclimatic': dict({
      'title': 'Meteoclimatic',
    }),
    'metoffice': dict({
      'title': 'Met Office',
    }),
    'mfi': dict({
      'title': 'Ubiquiti mFi mPort',
    }),
    'microsoft': dict({
      'title': 'Microsoft Text-to-Speech (TTS)',
    }),
    'microsoft_face': dict({
      'title': 'Microsoft Face',
    }),
    'microsoft_face_detect': dict({
      'title': 'Microsoft Face Detect',
    }),
    'microsoft_face_identify': dict({
      'title': 'Microsoft Face Identify',
    }),
    'mijndomein_energie': dict({
      'title': 'Mijndomein Energie',
    }),
    'mikrotik': dict({
      'title': 'Mikrotik',
    }),
    'mill': dict({
      'title': 'Mill',
    }),
    'min_max': dict({
      'title': 'Min/Max',
    }),
    'minecraft_server': dict({
      'title': 'Minecraft Server',
    }),
    'minio': dict({
      'title': 'Minio',
    }),
    'mjpeg': dict({
      'title': 'MJPEG IP Camera',
    }),
    'moat': dict({
      'title': 'Moat',
    }),
    'mobile_app': dict({
      'title': 'Mobile App',
    }),
    'mochad': dict({
      'title': 'Mochad',
    }),
    'modbus': dict({
      'title': 'Modbus',
    }),
    'modem_callerid': dict({
      'title': 'Phone Modem',
    }),
    'modern_forms': dict({
      'title': 'Modern Forms',
    }),
    'moehlenhoff_alpha2': dict({
      'title': 'Möhlenhoff Alpha 2',
    }),
    'mold_indicator': dict({
      'title': 'Mold Indicator',
    }),
    'monessen': dict({
      'title': 'Monessen',
    }),
    'monoprice': dict({
      'title': 'Monoprice 6-Zone Amplifier',
    }),
    'moon': dict({
      'title': 'Moon',
    }),
    'mopeka': dict({
      'title': 'Mopeka',
    }),
    'motion_blinds': dict({
      'title': 'Motion Blinds',
    }),
    'motioneye': dict({
      'title': 'motionEye',
    }),
    'mpd': dict({
      'title': 'Music Player Daemon (MPD)',
    }),
    'mqtt': dict({
      'title': 'MQTT',
    }),
    'mqtt_eventstream': dict({
      'title': 'MQTT Eventstream',
    }),
    'mqtt_json': dict({
      'title': 'MQTT JSON',
    }),
    'mqtt_room': dict({
      'title': 'MQTT room presence',
    }),
    'mqtt_statestream': dict({
      'title': 'MQTT Statestream',
    }),
    'msteams': dict({
      'title': 'Microsoft Teams',
    }),
    'mullvad': dict({
      'title': 'Mullvad VPN',
    }),
    'mutesync': dict({
      'title': 'mutesync',
    }),
    'mvglive': dict({
      'title': 'MVG',
    }),
    'my': dict({
      'title': 'My Home Assistant',
    }),
    'mycroft': dict({
      'title': 'Mycroft',
    }),
    'mysensors': dict({
      'title': 'MySensors',
    }),
    'mystrom': dict({
      'title': 'myStrom',
    }),
    'mythicbeastsdns': dict({
      'title': 'Mythic Beasts DNS',
    }),
    'nad': dict({
      'title': 'NAD',
    }),
    'nam': dict({
      'title': 'Nettigo Air Monitor',
    }),
    'namecheapdns': dict({
      'title': 'Namecheap FreeDNS',
    }),
    'nanoleaf': dict({
      'title': 'Nanoleaf',
    }),
    'neato': dict({
      'title': 'Neato Botvac',
    }),
    'nederlandse_spoorwegen': dict({
      'title': 'Nederlandse Spoorwegen (NS)',
    }),
    'ness_alarm': dict({
      'title': 'Ness Alarm',
    }),
    'nest': dict({
      'title': 'Google Nest',
    }),
    'netatmo': dict({
      'title': 'Netatmo',
    }),
    'netdata': dict({
      'title': 'Netdata',
    }),
    'netgear': dict({
      'title': 'NETGEAR',
    }),
    'netgear_lte': dict({
      'title': 'NETGEAR LTE',
    }),
    'netio': dict({
      'title': 'Netio',
    }),
    'network': dict({
      'title': 'Network Configuration',
    }),
    'neurio_energy': dict({
      'title': 'Neurio energy',
    }),
    'nexia': dict({
      'title': 'Nexia/American Standard/Trane',
    }),
    'nexity': dict({
      'title': 'Nexity Eugénie',
    }),
    'nextbus': dict({
      'title': 'NextBus',
    }),
    'nextcloud': dict({
      'title': 'Nextcloud',
    }),
    'nextdns': dict({
      'title': 'NextDNS',
    }),
    'nfandroidtv': dict({
      'title': 'Notifications for Android TV / Fire TV',
    }),
    'nibe_heatpump': dict({
      'title': 'Nibe Heat Pump',
    }),
    'nightscout': dict({
      'title': 'Nightscout',
    }),
    'niko_home_control': dict({
      'title': 'Niko Home Control',
    }),
    'nilu': dict({
      'title': 'Norwegian Institute for Air Research (NILU)',
    }),
    'nina': dict({
      'title': 'NINA',
    }),
    'nissan_leaf': dict({
      'title': 'Nissan Leaf',
    }),
    'nmap_tracker': dict({
      'title': 'Nmap Tracker',
    }),
    'nmbs': dict({
      'title': 'NMBS',
    }),
    'no_ip': dict({
      'title': 'No-IP.com',
    }),
    'noaa_tides': dict({
      'title': 'NOAA Tides',
    }),
    'nobo_hub': dict({
      'title': 'Nobø Ecohub',
    }),
    'norway_air': dict({
      'title': 'Om Luftkvalitet i Norge (Norway Air)',
    }),
    'notify': dict({
      'title': 'Notifications',
    }),
    'notify_events': dict({
      'title': 'Notify.Events',
    }),
    'notion': dict({
      'title': 'Notion',
    }),
    'nsw_fuel_station': dict({
      'title': 'NSW Fuel Station Price',
    }),
    'nsw_rural_fire_service_feed': dict({
      'title': 'NSW Rural Fire Service Incidents',
    }),
    'nuheat': dict({
      'title': 'NuHeat',
    }),
    'nuki': dict({
      'title': 'Nuki',
    }),
    'numato': dict({
      'title': 'Numato USB GPIO Expander',
    }),
    'number': dict({
      'title': 'Number',
    }),
    'nut': dict({
      'title': 'Network UPS Tools (NUT)',
    }),
    'nutrichef': dict({
      'title': 'Nutrichef',
    }),
    'nws': dict({
      'title': 'National Weather Service (NWS)',
    }),
    'nx584': dict({
      'title': 'NX584',
    }),
    'nzbget': dict({
      'title': 'NZBGet',
    }),
    'oasa_telematics': dict({
      'title': 'OASA Telematics',
    }),
    'obihai': dict({
      'title': 'Obihai',
    }),
    'octoprint': dict({
      'title': 'OctoPrint',
    }),
    'oem': dict({
      'title': 'OpenEnergyMonitor WiFi Thermostat',
    }),
    'ohmconnect': dict({
      'title': 'OhmConnect',
    }),
    'ombi': dict({
      'title': 'Ombi',
    }),
    'omnilogic': dict({
      'title': 'Hayward Omnilogic',
    }),
    'onboarding': dict({
      'title': 'Home Assistant Onboarding',
    }),
    'oncue': dict({
      'title': 'Oncue by Kohler',
    }),
    'ondilo_ico': dict({
      'title': 'Ondilo ICO',
    }),
    'onewire': dict({
      'title': '1-Wire',
    }),
    'onkyo': dict({
      'title': 'Onkyo',
    }),
    'onvif': dict({
      'title': 'ONVIF',
    }),
    'open_meteo': dict({
      'title': 'Open-Meteo',
    }),
    'openai_conversation': dict({
      'title': 'OpenAI Conversation',
    }),
    'openalpr_cloud': dict({
      'title': 'OpenALPR Cloud',
    }),
    'opencv': dict({
      'title': 'OpenCV',
    }),
    'openerz': dict({
      'title': 'Open ERZ',
    }),
    'openevse': dict({
      'title': 'OpenEVSE',
    }),
    'openexchangerates': dict({
      'title': 'Open Exchange Rates',
    }),
    'opengarage': dict({
      'title': 'OpenGarage',
    }),
    'openhardwaremonitor': dict({
      'title': 'Open Hardware Monitor',
    }),
    'openhome': dict({
      'title': 'Linn / OpenHome',
    }),
    'opensensemap': dict({
      'title': 'openSenseMap',
    }),
    'opensky': dict({
      'title': 'OpenSky Network',
    }),
    'opentherm_gw': dict({
      'title': 'OpenTherm Gateway',
    }),
    'openuv': dict({
      'title': 'OpenUV',
    }),
    'openweathermap': dict({
      'title': 'OpenWeatherMap',
    }),
    'opnsense': dict({
      'title': 'OPNSense',
    }),
    'opower': dict({
      'title': 'Opower',
    }),
    'opple': dict({
      'title': 'Opple',
    }),
    'oralb': dict({
      'title': 'Oral-B',
    }),
    'oru': dict({
      'title': 'Orange and Rockland Utility (ORU)',
    }),
    'oru_opower': dict({
      'title': 'Orange and Rockland Utilities (ORU) Opower',
    }),
    'orvibo': dict({
      'title': 'Orvibo',
    }),
    'osoenergy': dict({
      'title': 'OSO Energy',
    }),
    'osramlightify': dict({
      'title': 'Osramlightify',
    }),
    'otbr': dict({
      'title': 'Open Thread Border Router',
    }),
    'otp': dict({
      'title': 'One-Time Password (OTP)',
    }),
    'ourgroceries': dict({
      'title': 'OurGroceries',
    }),
    'overkiz': dict({
      'title': 'Overkiz',
    }),
    'ovo_energy': dict({
      'title': 'OVO Energy',
    }),
    'owntracks': dict({
      'title': 'OwnTracks',
    }),
    'p1_monitor': dict({
      'title': 'P1 Monitor',
    }),
    'panasonic_bluray': dict({
      'title': 'Panasonic Blu-Ray Player',
    }),
    'panasonic_viera': dict({
      'title': 'Panasonic Viera',
    }),
    'pandora': dict({
      'title': 'Pandora',
    }),
    'panel_custom': dict({
      'title': 'Custom panel',
    }),
    'panel_iframe': dict({
      'title': 'iFrame panel',
    }),
    'pcs_lighting': dict({
      'title': 'PCS Lighting',
    }),
    'peco': dict({
      'title': 'PECO Outage Counter',
    }),
    'peco_opower': dict({
      'title': 'PECO Energy Company (PECO)',
    }),
    'pegel_online': dict({
      'title': 'PEGELONLINE',
    }),
    'pencom': dict({
      'title': 'Pencom',
    }),
    'pepco': dict({
      'title': 'Potomac Electric Power Company (Pepco)',
    }),
    'persistent_notification': dict({
      'title': 'Persistent Notification',
    }),
    'person': dict({
      'title': 'Person',
    }),
    'pge': dict({
      'title': 'Pacific Gas & Electric (PG&E)',
    }),
    'philips_js': dict({
      'title': 'Philips TV',
    }),
    'pi_hole': dict({
      'title': 'Pi-hole',
    }),
    'picnic': dict({
      'title': 'Picnic',
    }),
    'picotts': dict({
      'title': 'Pico TTS',
    }),
    'pilight': dict({
      'title': 'Pilight',
    }),
    'ping': dict({
      'title': 'Ping (ICMP)',
    }),
    'pioneer': dict({
      'title': 'Pioneer',
    }),
    'piper': dict({
      'title': 'Piper',
    }),
    'pjlink': dict({
      'title': 'PJLink',
    }),
    'plaato': dict({
      'title': 'Plaato',
    }),
    'plant': dict({
      'title': 'Plant Monitor',
    }),
    'plex': dict({
      'title': 'Plex Media Server',
    }),
    'plugwise': dict({
      'title': 'Plugwise',
    }),
    'plum_lightpad': dict({
      'title': 'Plum Lightpad',
    }),
    'pocketcasts': dict({
      'title': 'Pocket Casts',
    }),
    'point': dict({
      'title': 'Minut Point',
    }),
    'poolsense': dict({
      'title': 'PoolSense',
    }),
    'portlandgeneral': dict({
      'title': 'Portland General Electric (PGE)',
    }),
    'powerwall': dict({
      'title': 'Tesla Powerwall',
    }),
    'private_ble_device': dict({
      'title': 'Private BLE Device',
    }),
    'profiler': dict({
      'title': 'Profiler',
    }),
    'progettihwsw': dict({
      'title': 'ProgettiHWSW Automation',
    }),
    'proliphix': dict({
      'title': 'Proliphix',
    }),
    'prometheus': dict({
      'title': 'Prometheus',
    }),
    'prosegur': dict({
      'title': 'Prosegur Alarm',
    }),
    'prowl': dict({
      'title': 'Prowl',
    }),
    'proximity': dict({
      'title': 'Proximity',
    }),
    'proxmoxve': dict({
      'title': 'Proxmox VE',
    }),
    'proxy': dict({
      'title': 'Camera Proxy',
    }),
    'prusalink': dict({
      'title': 'PrusaLink',
    }),
    'ps4': dict({
      'title': 'Sony PlayStation 4',
    }),
    'pse': dict({
      'title': 'Puget Sound Energy (PSE)',
    }),
    'psoklahoma': dict({
      'title': 'Public Service Company of Oklahoma (PSO)',
    }),
    'pulseaudio_loopback': dict({
      'title': 'PulseAudio Loopback',
    }),
    'pure_energie': dict({
      'title': 'Pure Energie',
    }),
    'purpleair': dict({
      'title': 'PurpleAir',
    }),
    'push': dict({
      'title': 'Push',
    }),
    'pushbullet': dict({
      'title': 'Pushbullet',
    }),
    'pushover': dict({
      'title': 'Pushover',
    }),
    'pushsafer': dict({
      'title': 'Pushsafer',
    }),
    'pvoutput': dict({
      'title': 'PVOutput',
    }),
    'pvpc_hourly_pricing': dict({
      'title': 'Spain electricity hourly pricing (PVPC)',
    }),
    'pyload': dict({
      'title': 'pyLoad',
    }),
    'python_script': dict({
      'title': 'Python Scripts',
    }),
    'qbittorrent': dict({
      'title': 'qBittorrent',
    }),
    'qingping': dict({
      'title': 'Qingping',
    }),
    'qld_bushfire': dict({
      'title': 'Queensland Bushfire Alert',
    }),
    'qnap': dict({
      'title': 'QNAP',
    }),
    'qnap_qsw': dict({
      'title': 'QNAP QSW',
    }),
    'qrcode': dict({
      'title': 'QR Code',
    }),
    'quadrafire': dict({
      'title': 'Quadra-Fire',
    }),
    'quantum_gateway': dict({
      'title': 'Quantum Gateway',
    }),
    'qvr_pro': dict({
      'title': 'QVR Pro',
    }),
    'qwikswitch': dict({
      'title': 'QwikSwitch QSUSB',
    }),
    'rachio': dict({
      'title': 'Rachio',
    }),
    'radarr': dict({
      'title': 'Radarr',
    }),
    'radio_browser': dict({
      'title': 'Radio Browser',
    }),
    'radiotherm': dict({
      'title': 'Radio Thermostat',
    }),
    'rainbird': dict({
      'title': 'Rain Bird',
    }),
    'raincloud': dict({
      'title': 'Melnor RainCloud',
    }),
    'rainforest_eagle': dict({
      'title': 'Rainforest Eagle',
    }),
    'rainmachine': dict({
      'title': 'RainMachine',
    }),
    'random': dict({
      'title': 'Random',
    }),
    'rapt_ble': dict({
      'title': 'RAPT Bluetooth',
    }),
    'raspyrfm': dict({
      'title': 'RaspyRFM',
    }),
    'raven_rock_mfg': dict({
      'title': 'Raven Rock MFG',
    }),
    'rdw': dict({
      'title': 'RDW',
    }),
    'recollect_waste': dict({
      'title': 'ReCollect Waste',
    }),
    'recorder': dict({
      'title': 'Recorder',
    }),
    'recovery_mode': dict({
      'title': 'Recovery Mode',
    }),
    'recswitch': dict({
      'title': 'Ankuoo REC Switch',
    }),
    'reddit': dict({
      'title': 'Reddit',
    }),
    'refoss': dict({
      'title': 'Refoss',
    }),
    'rejseplanen': dict({
      'title': 'Rejseplanen',
    }),
    'remember_the_milk': dict({
      'title': 'Remember The Milk',
    }),
    'remote': dict({
      'title': 'Remote',
    }),
    'remote_rpi_gpio': dict({
      'title': 'Raspberry Pi Remote GPIO',
    }),
    'renault': dict({
      'title': 'Renault',
    }),
    'renson': dict({
      'title': 'Renson',
    }),
    'reolink': dict({
      'title': 'Reolink IP NVR/camera',
    }),
    'repairs': dict({
      'title': 'Repairs',
    }),
    'repetier': dict({
      'title': 'Repetier-Server',
    }),
    'rest': dict({
      'title': 'RESTful',
    }),
    'rest_command': dict({
      'title': 'RESTful Command',
    }),
    'rexel': dict({
      'title': 'Rexel Energeasy Connect',
    }),
    'rflink': dict({
      'title': 'RFLink',
    }),
    'rfxtrx': dict({
      'title': 'RFXCOM RFXtrx',
    }),
    'rhasspy': dict({
      'title': 'Rhasspy',
    }),
    'ridwell': dict({
      'title': 'Ridwell',
    }),
    'ring': dict({
      'title': 'Ring',
    }),
    'ripple': dict({
      'title': 'Ripple',
    }),
    'risco': dict({
      'title': 'Risco',
    }),
    'rituals_perfume_genie': dict({
      'title': 'Rituals Perfume Genie',
    }),
    'rmvtransport': dict({
      'title': 'RMV',
    }),
    'roborock': dict({
      'title': 'Roborock',
    }),
    'rocketchat': dict({
      'title': 'Rocket.Chat',
    }),
    'roku': dict({
      'title': 'Roku',
    }),
    'roomba': dict({
      'title': 'iRobot Roomba and Braava',
    }),
    'roon': dict({
      'title': 'RoonLabs music player',
    }),
    'route53': dict({
      'title': 'AWS Route53',
    }),
    'rova': dict({
      'title': 'ROVA',
    }),
    'rpi_camera': dict({
      'title': 'Raspberry Pi Camera',
    }),
    'rpi_power': dict({
      'title': 'Raspberry Pi Power Supply Checker',
    }),
    'rss_feed_template': dict({
      'title': 'RSS feed template',
    }),
    'rtorrent': dict({
      'title': 'rTorrent',
    }),
    'rtsp_to_webrtc': dict({
      'title': 'RTSPtoWebRTC',
    }),
    'ruckus_unleashed': dict({
      'title': 'Ruckus Unleashed',
    }),
    'russound_rio': dict({
      'title': 'Russound RIO',
    }),
    'russound_rnet': dict({
      'title': 'Russound RNET',
    }),
    'ruuvi_gateway': dict({
      'title': 'Ruuvi Gateway',
    }),
    'ruuvitag_ble': dict({
      'title': 'RuuviTag BLE',
    }),
    'rympro': dict({
      'title': 'Read Your Meter Pro',
    }),
    'sabnzbd': dict({
      'title': 'SABnzbd',
    }),
    'saj': dict({
      'title': 'SAJ Solar Inverter',
    }),
    'samsungtv': dict({
      'title': 'Samsung Smart TV',
    }),
    'satel_integra': dict({
      'title': 'Satel Integra',
    }),
    'scene': dict({
      'title': 'Scenes',
    }),
    'schedule': dict({
      'title': 'Schedule',
    }),
    'schlage': dict({
      'title': 'Schlage',
    }),
    'schluter': dict({
      'title': 'Schluter',
    }),
    'scl': dict({
      'title': 'Seattle City Light (SCL)',
    }),
    'scrape': dict({
      'title': 'Scrape',
    }),
    'screenaway': dict({
      'title': 'ScreenAway',
    }),
    'screenlogic': dict({
      'title': 'Pentair ScreenLogic',
    }),
    'script': dict({
      'title': 'Scripts',
    }),
    'scsgate': dict({
      'title': 'SCSGate',
    }),
    'search': dict({
      'title': 'Search',
    }),
    'season': dict({
      'title': 'Season',
    }),
    'select': dict({
      'title': 'Select',
    }),
    'sendgrid': dict({
      'title': 'SendGrid',
    }),
    'sense': dict({
      'title': 'Sense',
    }),
    'sensibo': dict({
      'title': 'Sensibo',
    }),
    'sensirion_ble': dict({
      'title': 'Sensirion BLE',
    }),
    'sensor': dict({
      'title': 'Sensor',
    }),
    'sensorblue': dict({
      'title': 'SensorBlue',
    }),
    'sensorpro': dict({
      'title': 'SensorPro',
    }),
    'sensorpush': dict({
      'title': 'SensorPush',
    }),
    'sentry': dict({
      'title': 'Sentry',
    }),
    'senz': dict({
      'title': 'nVent RAYCHEM SENZ',
    }),
    'serial': dict({
      'title': 'Serial',
    }),
    'serial_pm': dict({
      'title': 'Serial Particulate Matter',
    }),
    'sesame': dict({
      'title': 'Sesame Smart Lock',
    }),
    'seven_segments': dict({
      'title': 'Seven Segments OCR',
    }),
    'seventeentrack': dict({
      'title': '17TRACK',
    }),
    'sfr_box': dict({
      'title': 'SFR Box',
    }),
    'sharkiq': dict({
      'title': 'Shark IQ',
    }),
    'shell_command': dict({
      'title': 'Shell Command',
    }),
    'shelly': dict({
      'title': 'Shelly',
    }),
    'shodan': dict({
      'title': 'Shodan',
    }),
    'shopping_list': dict({
      'title': 'Shopping list',
    }),
    'sia': dict({
      'title': 'SIA Alarm Systems',
    }),
    'sigfox': dict({
      'title': 'Sigfox',
    }),
    'sighthound': dict({
      'title': 'Sighthound',
    }),
    'signal_messenger': dict({
      'title': 'Signal Messenger',
    }),
    'simplepush': dict({
      'title': 'Simplepush',
    }),
    'simplisafe': dict({
      'title': 'SimpliSafe',
    }),
    'simply_automated': dict({
      'title': 'Simply Automated',
    }),
    'simu': dict({
      'title': 'SIMU LiveIn2',
    }),
    'simulated': dict({
      'title': 'Simulated',
    }),
    'sinch': dict({
      'title': 'Sinch SMS',
    }),
    'siren': dict({
      'title': 'Siren',
    }),
    'sisyphus': dict({
      'title': 'Sisyphus',
    }),
    'sky_hub': dict({
      'title': 'Sky Hub',
    }),
    'skybeacon': dict({
      'title': 'Skybeacon',
    }),
    'skybell': dict({
      'title': 'SkyBell',
    }),
    'slack': dict({
      'title': 'Slack',
    }),
    'sleepiq': dict({
      'title': 'SleepIQ',
    }),
    'slide': dict({
      'title': 'Slide',
    }),
    'slimproto': dict({
      'title': 'SlimProto (Squeezebox players)',
    }),
    'sma': dict({
      'title': 'SMA Solar',
    }),
    'smappee': dict({
      'title': 'Smappee',
    }),
    'smart_blinds': dict({
      'title': 'Smart Blinds',
    }),
    'smart_home': dict({
      'title': 'Smart Home',
    }),
    'smart_meter_texas': dict({
      'title': 'Smart Meter Texas',
    }),
    'smarther': dict({
      'title': 'Smarther',
    }),
    'smartthings': dict({
      'title': 'SmartThings',
    }),
    'smarttub': dict({
      'title': 'SmartTub',
    }),
    'smarty': dict({
      'title': 'Salda Smarty',
    }),
    'smhi': dict({
      'title': 'SMHI',
    }),
    'sms': dict({
      'title': 'SMS notifications via GSM-modem',
    }),
    'smtp': dict({
      'title': 'SMTP',
    }),
    'snapcast': dict({
      'title': 'Snapcast',
    }),
    'snips': dict({
      'title': 'Snips',
    }),
    'snmp': dict({
      'title': 'SNMP',
    }),
    'snooz': dict({
      'title': 'Snooz',
    }),
    'solaredge': dict({
      'title': 'SolarEdge',
    }),
    'solaredge_local': dict({
      'title': 'SolarEdge Local',
    }),
    'solarlog': dict({
      'title': 'Solar-Log',
    }),
    'solax': dict({
      'title': 'SolaX Power',
    }),
    'soma': dict({
      'title': 'Soma Connect',
    }),
    'somfy': dict({
      'title': 'Somfy',
    }),
    'somfy_mylink': dict({
      'title': 'Somfy MyLink',
    }),
    'sonarr': dict({
      'title': 'Sonarr',
    }),
    'songpal': dict({
      'title': 'Sony Songpal',
    }),
    'sonos': dict({
      'title': 'Sonos',
    }),
    'sony_projector': dict({
      'title': 'Sony Projector',
    }),
    'soundtouch': dict({
      'title': 'Bose SoundTouch',
    }),
    'spaceapi': dict({
      'title': 'Space API',
    }),
    'spc': dict({
      'title': 'Vanderbilt SPC',
    }),
    'speedtestdotnet': dict({
      'title': 'Speedtest.net',
    }),
    'spider': dict({
      'title': 'Itho Daalderop Spider',
    }),
    'splunk': dict({
      'title': 'Splunk',
    }),
    'spotify': dict({
      'title': 'Spotify',
    }),
    'sql': dict({
      'title': 'SQL',
    }),
    'squeezebox': dict({
      'title': 'Squeezebox (Logitech Media Server)',
    }),
    'srp_energy': dict({
      'title': 'SRP Energy',
    }),
    'ssdp': dict({
      'title': 'Simple Service Discovery Protocol (SSDP)',
    }),
    'starline': dict({
      'title': 'StarLine',
    }),
    'starlingbank': dict({
      'title': 'Starling Bank',
    }),
    'starlink': dict({
      'title': 'Starlink',
    }),
    'startca': dict({
      'title': 'Start.ca',
    }),
    'statistics': dict({
      'title': 'Statistics',
    }),
    'statsd': dict({
      'title': 'StatsD',
    }),
    'steam_online': dict({
      'title': 'Steam',
    }),
    'steamist': dict({
      'title': 'Steamist',
    }),
    'stiebel_eltron': dict({
      'title': 'STIEBEL ELTRON',
    }),
    'stookalert': dict({
      'title': 'RIVM Stookalert',
    }),
    'stookwijzer': dict({
      'title': 'Stookwijzer',
    }),
    'stream': dict({
      'title': 'Stream',
    }),
    'streamlabswater': dict({
      'title': 'StreamLabs',
    }),
    'stt': dict({
      'title': 'Speech-to-text (STT)',
    }),
    'subaru': dict({
      'title': 'Subaru',
    }),
    'suez_water': dict({
      'title': 'Suez Water',
    }),
    'sun': dict({
      'title': 'Sun',
    }),
    'sunweg': dict({
      'title': 'Sun WEG',
    }),
    'supervisord': dict({
      'title': 'Supervisord',
    }),
    'supla': dict({
      'title': 'SUPLA',
    }),
    'surepetcare': dict({
      'title': 'Sure Petcare',
    }),
    'swepco': dict({
      'title': 'Southwestern Electric Power Company (SWEPCO)',
    }),
    'swiss_hydrological_data': dict({
      'title': 'Swiss Hydrological Data',
    }),
    'swiss_public_transport': dict({
      'title': 'Swiss public transport',
    }),
    'swisscom': dict({
      'title': 'Swisscom Internet-Box',
    }),
    'switch': dict({
      'title': 'Switch',
    }),
    'switch_as_x': dict({
      'title': 'Change device type of a switch',
    }),
    'switchbee': dict({
      'title': 'SwitchBee',
    }),
    'switchbot': dict({
      'title': 'SwitchBot Bluetooth',
    }),
    'switchbot_cloud': dict({
      'title': 'SwitchBot Cloud',
    }),
    'switcher_kis': dict({
      'title': 'Switcher',
    }),
    'switchmate': dict({
      'title': 'Switchmate SimplySmart Home',
    }),
    'symfonisk': dict({
      'title': 'IKEA SYMFONISK',
    }),
    'syncthing': dict({
      'title': 'Syncthing',
    }),
    'syncthru': dict({
      'title': 'Samsung SyncThru Printer',
    }),
    'synology_chat': dict({
      'title': 'Synology Chat',
    }),
    'synology_dsm': dict({
      'title': 'Synology DSM',
    }),
    'synology_srm': dict({
      'title': 'Synology SRM',
    }),
    'syslog': dict({
      'title': 'Syslog',
    }),
    'system_bridge': dict({
      'title': 'System Bridge',
    }),
    'system_health': dict({
      'title': 'System Health',
    }),
    'system_log': dict({
      'title': 'System Log',
    }),
    'systemmonitor': dict({
      'title': 'System monitor',
    }),
    'tado': dict({
      'title': 'Tado',
    }),
    'tag': dict({
      'title': 'Tags',
    }),
    'tailscale': dict({
      'title': 'Tailscale',
    }),
    'tailwind': dict({
      'title': 'Tailwind',
    }),
    'tami4': dict({
      'title': 'Tami4 Edge / Edge+',
    }),
    'tank_utility': dict({
      'title': 'Tank Utility',
    }),
    'tankerkoenig': dict({
      'title': 'Tankerkoenig',
    }),
    'tapsaff': dict({
      'title': 'Taps Aff',
    }),
    'tasmota': dict({
      'title': 'Tasmota',
    }),
    'tautulli': dict({
      'title': 'Tautulli',
    }),
    'tcp': dict({
      'title': 'TCP',
    }),
    'ted5000': dict({
      'title': 'The Energy Detective TED5000',
    }),
    'telegram': dict({
      'title': 'Telegram',
    }),
    'telegram_bot': dict({
      'title': 'Telegram bot',
    }),
    'tellduslive': dict({
      'title': 'Telldus Live',
    }),
    'tellstick': dict({
      'title': 'TellStick',
    }),
    'telnet': dict({
      'title': 'Telnet',
    }),
    'temper': dict({
      'title': 'TEMPer',
    }),
    'template': dict({
      'title': 'Template',
    }),
    'tensorflow': dict({
      'title': 'TensorFlow',
    }),
    'tesla_wall_connector': dict({
      'title': 'Tesla Wall Connector',
    }),
    'tessie': dict({
      'title': 'Tessie',
    }),
    'text': dict({
      'title': 'Text',
    }),
    'tfiac': dict({
      'title': 'Tfiac',
    }),
    'thermobeacon': dict({
      'title': 'ThermoBeacon',
    }),
    'thermoplus': dict({
      'title': 'ThermoPlus',
    }),
    'thermopro': dict({
      'title': 'ThermoPro',
    }),
    'thermoworks_smoke': dict({
      'title': 'ThermoWorks Smoke',
    }),
    'thethingsnetwork': dict({
      'title': 'The Things Network',
    }),
    'thingspeak': dict({
      'title': 'ThingSpeak',
    }),
    'thinkingcleaner': dict({
      'title': 'Thinking Cleaner',
    }),
    'third_reality': dict({
      'title': 'Third Reality',
    }),
    'thomson': dict({
      'title': 'Thomson',
    }),
    'thread': dict({
      'title': 'Thread',
    }),
    'threshold': dict({
      'title': 'Threshold',
    }),
    'tibber': dict({
      'title': 'Tibber',
    }),
    'tikteck': dict({
      'title': 'Tikteck',
    }),
    'tile': dict({
      'title': 'Tile',
    }),
    'tilt_ble': dict({
      'title': 'Tilt Hydrometer BLE',
    }),
    'time': dict({
      'title': 'Time',
    }),
    'time_date': dict({
      'title': 'Time & Date',
    }),
    'timer': dict({
      'title': 'Timer',
    }),
    'tmb': dict({
      'title': 'Transports Metropolitans de Barcelona',
    }),
    'tod': dict({
      'title': 'Times of the Day',
    }),
    'todo': dict({
      'title': 'To-do list',
    }),
    'todoist': dict({
      'title': 'Todoist',
    }),
    'tolo': dict({
      'title': 'TOLO Sauna',
    }),
    'tomato': dict({
      'title': 'Tomato',
    }),
    'tomorrowio': dict({
      'title': 'Tomorrow.io',
    }),
    'toon': dict({
      'title': 'Toon',
    }),
    'torque': dict({
      'title': 'Torque',
    }),
    'totalconnect': dict({
      'title': 'Total Connect',
    }),
    'touchline': dict({
      'title': 'Roth Touchline',
    }),
    'tplink': dict({
      'title': 'TP-Link Kasa Smart',
    }),
    'tplink_lte': dict({
      'title': 'TP-Link LTE',
    }),
    'tplink_omada': dict({
      'title': 'TP-Link Omada',
    }),
    'traccar': dict({
      'title': 'Traccar',
    }),
    'tractive': dict({
      'title': 'Tractive',
    }),
    'tradfri': dict({
      'title': 'IKEA TRÅDFRI',
    }),
    'trafikverket_camera': dict({
      'title': 'Trafikverket Camera',
    }),
    'trafikverket_ferry': dict({
      'title': 'Trafikverket Ferry',
    }),
    'trafikverket_train': dict({
      'title': 'Trafikverket Train',
    }),
    'trafikverket_weatherstation': dict({
      'title': 'Trafikverket Weather Station',
    }),
    'transmission': dict({
      'title': 'Transmission',
    }),
    'transport_nsw': dict({
      'title': 'Transport NSW',
    }),
    'travisci': dict({
      'title': 'Travis-CI',
    }),
    'trend': dict({
      'title': 'Trend',
    }),
    'tts': dict({
      'title': 'Text-to-speech (TTS)',
    }),
    'tuya': dict({
      'title': 'Tuya',
    }),
    'twentemilieu': dict({
      'title': 'Twente Milieu',
    }),
    'twilio': dict({
      'title': 'Twilio',
    }),
    'twilio_call': dict({
      'title': 'Twilio Call',
    }),
    'twilio_sms': dict({
      'title': 'Twilio SMS',
    }),
    'twinkly': dict({
      'title': 'Twinkly',
    }),
    'twitch': dict({
      'title': 'Twitch',
    }),
    'twitter': dict({
      'title': 'X',
    }),
    'ubiwizz': dict({
      'title': 'Ubiwizz',
    }),
    'ubus': dict({
      'title': 'OpenWrt (ubus)',
    }),
    'ue_smart_radio': dict({
      'title': 'Logitech UE Smart Radio',
    }),
    'uk_transport': dict({
      'title': 'UK Transport',
    }),
    'ukraine_alarm': dict({
      'title': 'Ukraine Alarm',
    }),
    'ultraloq': dict({
      'title': 'Ultraloq',
    }),
    'unifi': dict({
      'title': 'UniFi Network',
    }),
    'unifi_direct': dict({
      'title': 'UniFi AP',
    }),
    'unifiled': dict({
      'title': 'UniFi LED',
    }),
    'unifiprotect': dict({
      'title': 'UniFi Protect',
    }),
    'universal': dict({
      'title': 'Universal media player',
    }),
    'upb': dict({
      'title': 'Universal Powerline Bus (UPB)',
    }),
    'upc_connect': dict({
      'title': 'UPC Connect Box',
    }),
    'upcloud': dict({
      'title': 'UpCloud',
    }),
    'update': dict({
      'title': 'Update',
    }),
    'upnp': dict({
      'title': 'UPnP/IGD',
    }),
    'uprise_smart_shades': dict({
      'title': 'Uprise Smart Shades',
    }),
    'uptime': dict({
      'title': 'Uptime',
    }),
    'uptimerobot': dict({
      'title': 'UptimeRobot',
    }),
    'usb': dict({
      'title': 'USB Discovery',
    }),
    'usgs_earthquakes_feed': dict({
      'title': 'U.S. Geological Survey Earthquake Hazards (USGS)',
    }),
    'utility_meter': dict({
      'title': 'Utility Meter',
    }),
    'uvc': dict({
      'title': 'Ubiquiti UniFi Video',
    }),
    'v2c': dict({
      'title': 'V2C',
    }),
    'vacuum': dict({
      'title': 'Vacuum',
    }),
    'vallox': dict({
      'title': 'Vallox',
    }),
    'valve': dict({
      'title': 'Valve',
    }),
    'vasttrafik': dict({
      'title': 'Västtrafik',
    }),
    'velbus': dict({
      'title': 'Velbus',
    }),
    'velux': dict({
      'title': 'Velux',
    }),
    'venstar': dict({
      'title': 'Venstar',
    }),
    'vera': dict({
      'title': 'Vera',
    }),
    'verisure': dict({
      'title': 'Verisure',
    }),
    'vermont_castings': dict({
      'title': 'Vermont Castings',
    }),
    'versasense': dict({
      'title': 'VersaSense',
    }),
    'version': dict({
      'title': 'Version',
    }),
    'vesync': dict({
      'title': 'VeSync',
    }),
    'viaggiatreno': dict({
      'title': 'Trenitalia ViaggiaTreno',
    }),
    'vicare': dict({
      'title': 'Viessmann ViCare',
    }),
    'vilfo': dict({
      'title': 'Vilfo Router',
    }),
    'vivotek': dict({
      'title': 'VIVOTEK',
    }),
    'vizio': dict({
      'title': 'VIZIO SmartCast',
    }),
    'vlc': dict({
      'title': 'VLC media player',
    }),
    'vlc_telnet': dict({
      'title': 'VLC media player via Telnet',
    }),
    'vodafone_station': dict({
      'title': 'Vodafone Station',
    }),
    'voice_assistant': dict({
      'title': 'Voice Assistant',
    }),
    'voicerss': dict({
      'title': 'VoiceRSS',
    }),
    'voip': dict({
      'title': 'Voice over IP',
    }),
    'volkszaehler': dict({
      'title': 'Volkszaehler',
    }),
    'volumio': dict({
      'title': 'Volumio',
    }),
    'volvooncall': dict({
      'title': 'Volvo On Call',
    }),
    'vulcan': dict({
      'title': 'Uonet+ Vulcan',
    }),
    'vultr': dict({
      'title': 'Vultr',
    }),
    'w800rf32': dict({
      'title': 'WGL Designs W800RF32',
    }),
    'wake_on_lan': dict({
      'title': 'Wake on LAN',
    }),
    'wake_word': dict({
      'title': 'Wake-word detection',
    }),
    'wallbox': dict({
      'title': 'Wallbox',
    }),
    'waqi': dict({
      'title': 'World Air Quality Index (WAQI)',
    }),
    'water_heater': dict({
      'title': 'Water heater',
    }),
    'waterfurnace': dict({
      'title': 'WaterFurnace',
    }),
    'watson_iot': dict({
      'title': 'IBM Watson IoT Platform',
    }),
    'watson_tts': dict({
      'title': 'IBM Watson TTS',
    }),
    'watttime': dict({
      'title': 'WattTime',
    }),
    'waze_travel_time': dict({
      'title': 'Waze Travel Time',
    }),
    'weather': dict({
      'title': 'Weather',
    }),
    'weatherflow': dict({
      'title': 'WeatherFlow',
    }),
    'weatherkit': dict({
      'title': 'Apple WeatherKit',
    }),
    'webhook': dict({
      'title': 'Webhook',
    }),
    'webostv': dict({
      'title': 'LG webOS Smart TV',
    }),
    'websocket_api': dict({
      'title': 'Home Assistant WebSocket API',
    }),
    'wemo': dict({
      'title': 'Belkin WeMo',
    }),
    'whirlpool': dict({
      'title': 'Whirlpool Appliances',
    }),
    'whisper': dict({
      'title': 'Whisper',
    }),
    'whois': dict({
      'title': 'Whois',
    }),
    'wiffi': dict({
      'title': 'Wiffi',
    }),
    'wilight': dict({
      'title': 'WiLight',
    }),
    'wirelesstag': dict({
      'title': 'Wireless Sensor Tags',
    }),
    'withings': dict({
      'title': 'Withings',
    }),
    'wiz': dict({
      'title': 'WiZ',
    }),
    'wled': dict({
      'title': 'WLED',
    }),
    'wolflink': dict({
      'title': 'Wolf SmartSet Service',
    }),
    'workday': dict({
      'title': 'Workday',
    }),
    'worldclock': dict({
      'title': 'Worldclock',
    }),
    'worldtidesinfo': dict({
      'title': 'World Tides',
    }),
    'worxlandroid': dict({
      'title': 'Worx Landroid',
    }),
    'ws66i': dict({
      'title': 'Soundavo WS66i 6-Zone Amplifier',
    }),
    'wsdot': dict({
      'title': 'Washington State Department of Transportation (WSDOT)',
    }),
    'wyoming': dict({
      'title': 'Wyoming Protocol',
    }),
    'x10': dict({
      'title': 'Heyu X10',
    }),
    'xbox': dict({
      'title': 'Xbox',
    }),
    'xeoma': dict({
      'title': 'Xeoma',
    }),
    'xiaomi': dict({
      'title': 'Xiaomi',
    }),
    'xiaomi_aqara': dict({
      'title': 'Xiaomi Gateway (Aqara)',
    }),
    'xiaomi_ble': dict({
      'title': 'Xiaomi BLE',
    }),
    'xiaomi_miio': dict({
      'title': 'Xiaomi Miio',
    }),
    'xiaomi_tv': dict({
      'title': 'Xiaomi TV',
    }),
    'xmpp': dict({
      'title': 'Jabber (XMPP)',
    }),
    'xs1': dict({
      'title': 'EZcontrol XS1',
    }),
    'yale_home': dict({
      'title': 'Yale Home',
    }),
    'yale_smart_alarm': dict({
      'title': 'Yale Smart Living',
    }),
    'yalexs_ble': dict({
      'title': 'Yale Access Bluetooth',
    }),
    'yamaha': dict({
      'title': 'Yamaha Network Receivers',
    }),
    'yamaha_musiccast': dict({
      'title': 'MusicCast',
    }),
    'yandex_transport': dict({
      'title': 'Yandex Transport',
    }),
    'yandextts': dict({
      'title': 'Yandex TTS',
    }),
    'yardian': dict({
      'title': 'Yardian',
    }),
    'yeelight': dict({
      'title': 'Yeelight',
    }),
    'yeelightsunflower': dict({
      'title': 'Yeelight Sunflower',
    }),
    'yi': dict({
      'title': 'Yi Home Cameras',
    }),
    'yolink': dict({
      'title': 'YoLink',
    }),
    'youless': dict({
      'title': 'YouLess',
    }),
    'youtube': dict({
      'title': 'YouTube',
    }),
    'zabbix': dict({
      'title': 'Zabbix',
    }),
    'zamg': dict({
      'title': 'GeoSphere Austria',
    }),
    'zengge': dict({
      'title': 'Zengge',
    }),
    'zeroconf': dict({
      'title': 'Zero-configuration networking (zeroconf)',
    }),
    'zerproc': dict({
      'title': 'Zerproc',
    }),
    'zestimate': dict({
      'title': 'Zestimate',
    }),
    'zeversolar': dict({
      'title': 'Zeversolar',
    }),
    'zha': dict({
      'title': 'Zigbee Home Automation',
    }),
    'zhong_hong': dict({
      'title': 'ZhongHong',
    }),
    'ziggo_mediabox_xl': dict({
      'title': 'Ziggo Mediabox XL',
    }),
    'zodiac': dict({
      'title': 'Zodiac',
    }),
    'zone': dict({
      'title': 'Zone',
    }),
    'zoneminder': dict({
      'title': 'ZoneMinder',
    }),
    'zwave_js': dict({
      'title': 'Z-Wave',
    }),
    'zwave_me': dict({
      'title': 'Z-Wave.Me',
    }),
  })
# ---
